{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nimport { Close, ArrowDown } from \"react-ikonate\";\nimport InfoText from \"./infoText\";\nvar ViewContainer = styled.div.withConfig({\n  displayName: \"WorkDisplayer__ViewContainer\",\n  componentId: \"sc-17ji7vk-0\"\n})([\"height:100%;width:100%;\"]);\n_c = ViewContainer;\nvar ImgWrapper = styled.div.withConfig({\n  displayName: \"WorkDisplayer__ImgWrapper\",\n  componentId: \"sc-17ji7vk-1\"\n})([\"position:relative;width:100%;height:400px;cursor:pointer;@media (max-width:550px){height:280px;}img{object-fit:cover;}\"]);\n_c2 = ImgWrapper;\nvar GridWrap = styled(FlexWrapper).withConfig({\n  displayName: \"WorkDisplayer__GridWrap\",\n  componentId: \"sc-17ji7vk-2\"\n})([\"margin-left:-12px;margin-right:-12px;\"]);\n_c3 = GridWrap;\nvar Button = styled.button.withConfig({\n  displayName: \"WorkDisplayer__Button\",\n  componentId: \"sc-17ji7vk-3\"\n})([\"font-size:16px;line-height:16px;padding:15px 24px;background-color:#0ac959;border:0;outline:0;color:#080559;margin-top:12px;cursor:pointer;border:solid 3px #0ac959;transition-duration:0.3s;:hover{border-color:#0800c9;color:#0800c9;}\"]);\n_c4 = Button;\n\nvar WorkDisplayer = function WorkDisplayer(_ref) {\n  var viewer = _ref.viewer,\n      clients = _ref.clients,\n      setViewer = _ref.setViewer,\n      blur = _ref.blur,\n      discipline = _ref.discipline,\n      setContactTextSource = _ref.setContactTextSource,\n      setContact = _ref.setContact;\n\n  if (viewer) {\n    return __jsx(React.Fragment, null, __jsx(FlexWrapper, {\n      justify: \"space-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(FlexWrapper, {\n      direction: \"column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        fontSize: \"36px\",\n        marginBottom: \"6px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, viewer.project ? viewer.project : viewer.clientName), viewer.project && __jsx(\"h3\", {\n      style: {\n        marginBottom: \"24px\",\n        color: \"#040234\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, viewer.clientName)), __jsx(Close, {\n      className: \"hover\",\n      style: {\n        width: \"36px\",\n        height: \"36px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return setViewer(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), __jsx(ViewContainer, {\n      width: clients.length,\n      className: \"hover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, __jsx(ImgWrapper, {\n      onClick: function onClick() {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, __jsx(Image, {\n      src: viewer.imageThumb,\n      alt: \"Picture of the author\",\n      layout: \"fill\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), __jsx(\"p\", {\n      style: {\n        marginTop: \"36px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, __jsx(InfoText, {\n      client: viewer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), __jsx(Button, {\n      onClick: function onClick() {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"More about this project\")));\n  }\n\n  return __jsx(GridWrap, {\n    wrap: true,\n    justify: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, clients.map(function (client) {\n    return __jsx(ClientThumbWrap, {\n      setViewer: setViewer,\n      client: client,\n      blur: blur,\n      key: client.id,\n      discipline: discipline,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_c5 = WorkDisplayer;\nexport default WorkDisplayer;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ViewContainer\");\n$RefreshReg$(_c2, \"ImgWrapper\");\n$RefreshReg$(_c3, \"GridWrap\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"WorkDisplayer\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx"],"names":["Image","ClientThumbWrap","FlexWrapper","styled","Close","ArrowDown","InfoText","ViewContainer","div","ImgWrapper","GridWrap","Button","button","WorkDisplayer","viewer","clients","setViewer","blur","discipline","setContactTextSource","setContact","fontSize","marginBottom","project","clientName","color","width","height","cursor","length","imageThumb","marginTop","map","client","id"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nimport { Close, ArrowDown } from \"react-ikonate\";\nimport InfoText from \"./infoText\";\n\nconst ViewContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  cursor: pointer;\n  @media (max-width: 550px) {\n    height: 280px;\n  }\n  img {\n    object-fit: cover;\n  }\n`;\n\nconst GridWrap = styled(FlexWrapper)`\n  margin-left: -12px;\n  margin-right: -12px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  line-height: 16px;\n  padding: 15px 24px;\n  background-color: #0ac959;\n  border: 0;\n  outline: 0;\n  color: #080559;\n  margin-top: 12px;\n  cursor: pointer;\n  border: solid 3px #0ac959;\n  transition-duration: 0.3s;\n  :hover {\n    border-color: #0800c9;\n    color: #0800c9;\n  }\n`;\n\nconst WorkDisplayer = ({\n  viewer,\n  clients,\n  setViewer,\n  blur,\n  discipline,\n  setContactTextSource,\n  setContact,\n}) => {\n  if (viewer) {\n    return (\n      <>\n        <FlexWrapper justify=\"space-between\">\n          <FlexWrapper direction=\"column\">\n            <h2 style={{ fontSize: `36px`, marginBottom: `6px` }}>\n              {viewer.project ? viewer.project : viewer.clientName}\n            </h2>\n            {viewer.project && (\n              <h3 style={{ marginBottom: `24px`, color: `#040234` }}>\n                {viewer.clientName}\n              </h3>\n            )}\n          </FlexWrapper>\n          <Close\n            className=\"hover\"\n            style={{ width: `36px`, height: `36px`, cursor: `pointer` }}\n            onClick={() => setViewer(false)}\n          />\n        </FlexWrapper>\n        <ViewContainer width={clients.length} className=\"hover\">\n          <ImgWrapper\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            <Image\n              src={viewer.imageThumb}\n              alt=\"Picture of the author\"\n              layout=\"fill\"\n            />\n          </ImgWrapper>\n          <p style={{ marginTop: `36px` }}>\n            <InfoText client={viewer} />\n          </p>\n          <Button\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            More about this project\n          </Button>\n        </ViewContainer>\n      </>\n    );\n  }\n  return (\n    <GridWrap wrap={true} justify=\"flex-start\">\n      {clients.map((client) => (\n        <ClientThumbWrap\n          setViewer={setViewer}\n          client={client}\n          blur={blur}\n          key={client.id}\n          discipline={discipline}\n        />\n      ))}\n    </GridWrap>\n  );\n};\n\nexport default WorkDisplayer;\n"]},"metadata":{},"sourceType":"module"}