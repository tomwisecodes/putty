{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  line-height: 16px;\\n  padding: 15px 24px;\\n  background-color: #0ac959;\\n  border: 0;\\n  outline: 0;\\n  color: #080559;\\n  margin-top: 12px;\\n  cursor: pointer;\\n  border: solid 3px #0ac959;\\n  transition-duration: 0.3s;\\n  :hover {\\n    border-color: #0800c9;\\n    color: #0800c9;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: -12px;\\n  margin-right: -12px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n  cursor: pointer;\\n  img {\\n    object-fit: cover;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nvar ViewContainer = styled.div(_templateObject());\n_c = ViewContainer;\nvar ImgWrapper = styled.div(_templateObject2());\n_c2 = ImgWrapper;\nvar GridWrap = styled(FlexWrapper)(_templateObject3());\n_c3 = GridWrap;\nvar Button = styled.button(_templateObject4());\n_c4 = Button;\n\nvar WorkDisplayer = function WorkDisplayer(_ref) {\n  var viewer = _ref.viewer,\n      clients = _ref.clients,\n      setViewer = _ref.setViewer,\n      blur = _ref.blur,\n      discipline = _ref.discipline,\n      setContactTextSource = _ref.setContactTextSource,\n      setContact = _ref.setContact;\n\n  if (viewer) {\n    return __jsx(React.Fragment, null, __jsx(FlexWrapper, {\n      justify: \"space-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        fontSize: \"36px\",\n        marginBottom: \"24px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, viewer.clientName), __jsx(Close, {\n      className: \"hover\",\n      style: {\n        width: \"36px\",\n        height: \"36px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return setViewer(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), __jsx(ViewContainer, {\n      width: clients.length,\n      className: \"hover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(ImgWrapper, {\n      onClick: function onClick() {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(Image, {\n      src: viewer.imageThumb,\n      alt: \"Picture of the author\",\n      layout: \"fill\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), __jsx(\"p\", {\n      style: {\n        marginTop: \"36px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"This is som text about some stuff that goes on fever like this and it goes on on onon on.\"), __jsx(Button, {\n      onClick: function onClick() {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"More about this project\")));\n  }\n\n  return __jsx(GridWrap, {\n    wrap: true,\n    justify: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, clients.map(function (client) {\n    return __jsx(ClientThumbWrap, {\n      setViewer: setViewer,\n      client: client,\n      blur: blur,\n      key: client.id,\n      discipline: discipline,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_c5 = WorkDisplayer;\nexport default WorkDisplayer;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ViewContainer\");\n$RefreshReg$(_c2, \"ImgWrapper\");\n$RefreshReg$(_c3, \"GridWrap\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"WorkDisplayer\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx"],"names":["Image","ClientThumbWrap","FlexWrapper","styled","ViewContainer","div","ImgWrapper","GridWrap","Button","button","WorkDisplayer","viewer","clients","setViewer","blur","discipline","setContactTextSource","setContact","fontSize","marginBottom","clientName","width","height","cursor","length","imageThumb","marginTop","map","client","id"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nconst ViewContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  cursor: pointer;\n  img {\n    object-fit: cover;\n  }\n`;\n\nconst GridWrap = styled(FlexWrapper)`\n  margin-left: -12px;\n  margin-right: -12px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  line-height: 16px;\n  padding: 15px 24px;\n  background-color: #0ac959;\n  border: 0;\n  outline: 0;\n  color: #080559;\n  margin-top: 12px;\n  cursor: pointer;\n  border: solid 3px #0ac959;\n  transition-duration: 0.3s;\n  :hover {\n    border-color: #0800c9;\n    color: #0800c9;\n  }\n`;\n\nconst WorkDisplayer = ({\n  viewer,\n  clients,\n  setViewer,\n  blur,\n  discipline,\n  setContactTextSource,\n  setContact,\n}) => {\n  if (viewer) {\n    return (\n      <>\n        <FlexWrapper justify=\"space-between\">\n          <h2 style={{ fontSize: `36px`, marginBottom: `24px` }}>\n            {viewer.clientName}\n          </h2>\n          <Close\n            className=\"hover\"\n            style={{ width: `36px`, height: `36px`, cursor: `pointer` }}\n            onClick={() => setViewer(false)}\n          />\n        </FlexWrapper>\n        <ViewContainer width={clients.length} className=\"hover\">\n          <ImgWrapper\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            <Image\n              src={viewer.imageThumb}\n              alt=\"Picture of the author\"\n              layout=\"fill\"\n            />\n          </ImgWrapper>\n          <p style={{ marginTop: `36px` }}>\n            This is som text about some stuff that goes on fever like this and\n            it goes on on onon on.\n          </p>\n          <Button\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            More about this project\n          </Button>\n        </ViewContainer>\n      </>\n    );\n  }\n  return (\n    <GridWrap wrap={true} justify=\"flex-start\">\n      {clients.map((client) => (\n        <ClientThumbWrap\n          setViewer={setViewer}\n          client={client}\n          blur={blur}\n          key={client.id}\n          discipline={discipline}\n        />\n      ))}\n    </GridWrap>\n  );\n};\n\nexport default WorkDisplayer;\n"]},"metadata":{},"sourceType":"module"}