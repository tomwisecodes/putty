{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nconst hover = keyframes([\"0%{top:-25px;left:-25px;width:50px;height:50px;}100%{top:-40px;left:-40px;width:80px;height:80px;border:5px solid #18922B;}\"]);\nconst Circle = styled.div.withConfig({\n  displayName: \"MouseCircle__Circle\",\n  componentId: \"skopu-0\"\n})([\"position:absolute;border-radius:50%;border:2px solid #040234;transition:opacity 0.3s ease 0s;top:-15px;left:-15px;width:30px;height:30px;margin-right:24px;backface-visibility:hidden;pointer-events:none;z-index:9999;animation:\", \";animation-duration:0.5s;animation-fill-mode:forwards;animation-timing-function:ease-in-out;@media (max-width:900px){display:none;}\"], props => props.linkHovered ? hover : \"unset\");\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const {\n    0: mouseX,\n    1: setMouseX\n  } = useState(null);\n  const {\n    0: mouseY,\n    1: setMouseY\n  } = useState(null);\n  const {\n    0: mouseMove,\n    1: setMouseMove\n  } = useState(null);\n  const {\n    0: linkHovered,\n    1: setLinkHovered\n  } = useState(false);\n\n  const handleLinkHoverEvents = () => {\n    document.querySelectorAll(\"a\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n    document.querySelectorAll(\"button\", \".hover\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n  };\n\n  useEffect(() => {\n    if (window === \"undefined\") {\n      return null;\n    }\n\n    const setFromEvent = e => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    handleLinkHoverEvents();\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n  const dots = [];\n  const classNames = [\"square\", \"circle\", \"triangle\", \"dimond\", \"square\"];\n  const colours = [\"#0800C9\"];\n\n  for (let i = 0; i < 8; i++) {\n    const node = document.createElement(\"div\");\n    const theClass = classNames[Math.floor(Math.random() * classNames.length)];\n    node.className = theClass;\n    document.body.appendChild(node);\n    dots.push(node);\n  }\n\n  const currentDot = 0;\n  const min = 4;\n  const max = 5;\n  addEventListener(\"mousemove\", function (event) {\n    const dot = dots[currentDot];\n    const theColour = colours[Math.floor(Math.random() * colours.length)];\n    const min = -5;\n    const max = 5;\n    const minHue = -30;\n    const maxHue = 30;\n    const random = Math.floor(Math.random() * (+max - +min)) + +min;\n    const randomHue = Math.floor(Math.random() * (+maxHue - +minHue)) + +minHue;\n\n    if (dot.classList.value !== \"triangle\") {\n      dot.style.backgroundColor = theColour;\n    } else {\n      dot.style.borderTopColor = theColour;\n      dot.style.transform = \"rotate(\" + Math.random() * 360 + \"deg)\";\n    }\n\n    dot.style.filter = \"hue-rotate(\" + randomHue + \"deg)\";\n    dot.style.display = \"block\";\n    dot.style.left = event.pageX + random + \"px\";\n    dot.style.top = event.pageY + random + \"px\";\n    dot.style.opacity = \"0\";\n    dot.style.animationName = \"fader\";\n    dot.style.backfaceVisibility = \"hidden\";\n    dot.style.animationDuration = \"2000ms\";\n    dot.style.animationFillMode = \"forwards\";\n    setTimeout(function () {\n      dot.style.animationName = \"unset\";\n    }, 800);\n    currentDot = (currentDot + 1) % dots.length;\n  });\n  return __jsx(Circle, {\n    ref: cricleRef,\n    linkHovered: linkHovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default MouseCircle;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx"],"names":["useState","useRef","useEffect","styled","keyframes","hover","Circle","div","props","linkHovered","MouseCircle","cricleRef","mouseX","setMouseX","mouseY","setMouseY","mouseMove","setMouseMove","setLinkHovered","handleLinkHoverEvents","document","querySelectorAll","forEach","el","addEventListener","window","setFromEvent","e","pageX","pageY","mouseMoving","removeEventListener","current","style","transform","dots","classNames","colours","i","node","createElement","theClass","Math","floor","random","length","className","body","appendChild","push","currentDot","min","max","event","dot","theColour","minHue","maxHue","randomHue","classList","value","backgroundColor","borderTopColor","filter","display","left","top","opacity","animationName","backfaceVisibility","animationDuration","animationFillMode","setTimeout"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst hover = keyframes`\n  0% { \n    top: -25px;\n  left: -25px;\n  width: 50px;\n  height: 50px;\n  }\n  100% {\n    top: -40px;\n  left: -40px;\n  width: 80px;\n  height: 80px;\n  border: 5px solid #18922B;\n  }\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 2px solid #040234;\n  transition: opacity 0.3s ease 0s;\n  top: -15px;\n  left: -15px;\n  width: 30px;\n  height: 30px;\n  margin-right: 24px;\n  backface-visibility: hidden;\n  pointer-events: none;\n  z-index: 9999;\n  animation: ${(props) => (props.linkHovered ? hover : \"unset\")};\n  animation-duration: 0.5s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease-in-out;\n  @media (max-width: 900px) {\n    display: none;\n  }\n`;\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const [mouseX, setMouseX] = useState(null);\n  const [mouseY, setMouseY] = useState(null);\n  const [mouseMove, setMouseMove] = useState(null);\n  const [linkHovered, setLinkHovered] = useState(false);\n\n  const handleLinkHoverEvents = () => {\n    document.querySelectorAll(\"a\").forEach((el) => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n    document.querySelectorAll(\"button\", \".hover\").forEach((el) => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n  };\n\n  useEffect(() => {\n    if (window === \"undefined\") {\n      return null;\n    }\n    const setFromEvent = (e) => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    handleLinkHoverEvents();\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n\n  const dots = [];\n  const classNames = [\"square\", \"circle\", \"triangle\", \"dimond\", \"square\"];\n  const colours = [\"#0800C9\"];\n  for (let i = 0; i < 8; i++) {\n    const node = document.createElement(\"div\");\n    const theClass = classNames[Math.floor(Math.random() * classNames.length)];\n    node.className = theClass;\n    document.body.appendChild(node);\n    dots.push(node);\n  }\n  const currentDot = 0;\n\n  const min = 4;\n  const max = 5;\n\n  addEventListener(\"mousemove\", function (event) {\n    const dot = dots[currentDot];\n    const theColour = colours[Math.floor(Math.random() * colours.length)];\n    const min = -5;\n    const max = 5;\n    const minHue = -30;\n    const maxHue = 30;\n    const random = Math.floor(Math.random() * (+max - +min)) + +min;\n    const randomHue = Math.floor(Math.random() * (+maxHue - +minHue)) + +minHue;\n    if (dot.classList.value !== \"triangle\") {\n      dot.style.backgroundColor = theColour;\n    } else {\n      dot.style.borderTopColor = theColour;\n      dot.style.transform = \"rotate(\" + Math.random() * 360 + \"deg)\";\n    }\n    dot.style.filter = \"hue-rotate(\" + randomHue + \"deg)\";\n    dot.style.display = \"block\";\n    dot.style.left = event.pageX + random + \"px\";\n    dot.style.top = event.pageY + random + \"px\";\n    dot.style.opacity = \"0\";\n    dot.style.animationName = \"fader\";\n    dot.style.backfaceVisibility = \"hidden\";\n    dot.style.animationDuration = \"2000ms\";\n    dot.style.animationFillMode = \"forwards\";\n    setTimeout(function () {\n      dot.style.animationName = \"unset\";\n    }, 800);\n\n    currentDot = (currentDot + 1) % dots.length;\n  });\n\n  return <Circle ref={cricleRef} linkHovered={linkHovered} />;\n};\n\nexport default MouseCircle;\n"]},"metadata":{},"sourceType":"module"}