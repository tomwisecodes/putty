{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nimport { Close, ArrowDown } from \"react-ikonate\";\nimport InfoText from \"./infoText\";\nconst ViewContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  cursor: pointer;\n  img {\n    object-fit: cover;\n  }\n`;\nconst GridWrap = styled(FlexWrapper)`\n  margin-left: -12px;\n  margin-right: -12px;\n`;\nconst Button = styled.button`\n  font-size: 16px;\n  line-height: 16px;\n  padding: 15px 24px;\n  background-color: #0ac959;\n  border: 0;\n  outline: 0;\n  color: #080559;\n  margin-top: 12px;\n  cursor: pointer;\n  border: solid 3px #0ac959;\n  transition-duration: 0.3s;\n  :hover {\n    border-color: #0800c9;\n    color: #0800c9;\n  }\n`;\n\nconst WorkDisplayer = ({\n  viewer,\n  clients,\n  setViewer,\n  blur,\n  discipline,\n  setContactTextSource,\n  setContact\n}) => {\n  if (viewer) {\n    return __jsx(React.Fragment, null, __jsx(FlexWrapper, {\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(FlexWrapper, {\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        fontSize: `36px`,\n        marginBottom: `24px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, viewer.project ? viewer.project : viewer.clientName), viewer.project && __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }\n    }, viewer.clientName)), __jsx(Close, {\n      className: \"hover\",\n      style: {\n        width: `36px`,\n        height: `36px`,\n        cursor: `pointer`\n      },\n      onClick: () => setViewer(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), __jsx(ViewContainer, {\n      width: clients.length,\n      className: \"hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, __jsx(ImgWrapper, {\n      onClick: () => {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, __jsx(Image, {\n      src: viewer.imageThumb,\n      alt: \"Picture of the author\",\n      layout: \"fill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), __jsx(\"p\", {\n      style: {\n        marginTop: `36px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(InfoText, {\n      client: viewer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    })), __jsx(Button, {\n      onClick: () => {\n        setContact(true);\n        setContactTextSource(\"portfolio\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"More about this project\")));\n  }\n\n  return __jsx(GridWrap, {\n    wrap: true,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, clients.map(client => __jsx(ClientThumbWrap, {\n    setViewer: setViewer,\n    client: client,\n    blur: blur,\n    key: client.id,\n    discipline: discipline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WorkDisplayer;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/WorkDisplayer/index.jsx"],"names":["Image","ClientThumbWrap","FlexWrapper","styled","Close","ArrowDown","InfoText","ViewContainer","div","ImgWrapper","GridWrap","Button","button","WorkDisplayer","viewer","clients","setViewer","blur","discipline","setContactTextSource","setContact","fontSize","marginBottom","project","clientName","width","height","cursor","length","imageThumb","marginTop","map","client","id"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport ClientThumbWrap from \"../ClientThumbWrap\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport styled from \"styled-components\";\nimport { Close, ArrowDown } from \"react-ikonate\";\nimport InfoText from \"./infoText\";\n\nconst ViewContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\nconst ImgWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  cursor: pointer;\n  img {\n    object-fit: cover;\n  }\n`;\n\nconst GridWrap = styled(FlexWrapper)`\n  margin-left: -12px;\n  margin-right: -12px;\n`;\n\nconst Button = styled.button`\n  font-size: 16px;\n  line-height: 16px;\n  padding: 15px 24px;\n  background-color: #0ac959;\n  border: 0;\n  outline: 0;\n  color: #080559;\n  margin-top: 12px;\n  cursor: pointer;\n  border: solid 3px #0ac959;\n  transition-duration: 0.3s;\n  :hover {\n    border-color: #0800c9;\n    color: #0800c9;\n  }\n`;\n\nconst WorkDisplayer = ({\n  viewer,\n  clients,\n  setViewer,\n  blur,\n  discipline,\n  setContactTextSource,\n  setContact,\n}) => {\n  if (viewer) {\n    return (\n      <>\n        <FlexWrapper justify=\"space-between\">\n          <FlexWrapper direction=\"column\">\n            <h2 style={{ fontSize: `36px`, marginBottom: `24px` }}>\n              {viewer.project ? viewer.project : viewer.clientName}\n            </h2>\n            {viewer.project && <h3>{viewer.clientName}</h3>}\n          </FlexWrapper>\n\n          <Close\n            className=\"hover\"\n            style={{ width: `36px`, height: `36px`, cursor: `pointer` }}\n            onClick={() => setViewer(false)}\n          />\n        </FlexWrapper>\n        <ViewContainer width={clients.length} className=\"hover\">\n          <ImgWrapper\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            <Image\n              src={viewer.imageThumb}\n              alt=\"Picture of the author\"\n              layout=\"fill\"\n            />\n          </ImgWrapper>\n          <p style={{ marginTop: `36px` }}>\n            <InfoText client={viewer} />\n          </p>\n          <Button\n            onClick={() => {\n              setContact(true);\n              setContactTextSource(\"portfolio\");\n            }}\n          >\n            More about this project\n          </Button>\n        </ViewContainer>\n      </>\n    );\n  }\n  return (\n    <GridWrap wrap={true} justify=\"flex-start\">\n      {clients.map((client) => (\n        <ClientThumbWrap\n          setViewer={setViewer}\n          client={client}\n          blur={blur}\n          key={client.id}\n          discipline={discipline}\n        />\n      ))}\n    </GridWrap>\n  );\n};\n\nexport default WorkDisplayer;\n"]},"metadata":{},"sourceType":"module"}