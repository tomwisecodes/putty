{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nvar Circle = styled.div.withConfig({\n  displayName: \"MouseCircle__Circle\",\n  componentId: \"skopu-0\"\n})([\"position:fixed;border-radius:50%;border:2px solid #040234;transition:opacity 0.3s ease 0s;top:-30px;left:-30px;width:60px;height:60px;margin-right:24px;backface-visibility:hidden;pointer-events:none;\"]);\n_c = Circle;\n\nvar MouseCircle = function MouseCircle() {\n  _s();\n\n  var cricleRef = useRef();\n\n  var _useState = useState(null),\n      mouseX = _useState[0],\n      setMouseX = _useState[1];\n\n  var _useState2 = useState(null),\n      mouseY = _useState2[0],\n      setMouseY = _useState2[1];\n\n  useEffect(function () {\n    var setFromEvent = function setFromEvent(e) {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n\n    var mouseMoving = function mouseMoving() {\n      setMouseMove(true);\n    };\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n    return function () {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n  useEffect(function () {\n    cricleRef.current.style.transform = \"translate3d( \".concat(mouseX, \"px, \").concat(mouseY, \"px, 0) \");\n  }, [mouseX]);\n  return __jsx(Circle, {\n    ref: cricleRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(MouseCircle, \"OifN/NohSSEvo0j9Ob+DeCkYGRU=\");\n\n_c2 = MouseCircle;\nexport default MouseCircle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Circle\");\n$RefreshReg$(_c2, \"MouseCircle\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx"],"names":["useState","useRef","styled","Circle","div","MouseCircle","cricleRef","mouseX","setMouseX","mouseY","setMouseY","useEffect","setFromEvent","e","pageX","pageY","mouseMoving","setMouseMove","window","addEventListener","removeEventListener","current","style","transform"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,+MAAZ;KAAMD,M;;AAcN,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,MAAMC,SAAS,GAAGL,MAAM,EAAxB;;AADwB,kBAEID,QAAQ,CAAC,IAAD,CAFZ;AAAA,MAEjBO,MAFiB;AAAA,MAETC,SAFS;;AAAA,mBAGIR,QAAQ,CAAC,IAAD,CAHZ;AAAA,MAGjBS,MAHiB;AAAA,MAGTC,SAHS;;AAIxBC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BL,MAAAA,SAAS,CAACK,CAAC,CAACC,KAAH,CAAT;AACAJ,MAAAA,SAAS,CAACG,CAAC,CAACE,KAAH,CAAT;AACD,KAHD;;AAIA,QAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD;;AAIAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCP,YAArC;AACAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCH,WAArC;AAEA,WAAO,YAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCR,YAAxC;AACD,KAFD;AAGD,GAfQ,EAeN,EAfM,CAAT;AAiBAD,EAAAA,SAAS,CAAC,YAAM;AACdL,IAAAA,SAAS,CAACe,OAAV,CAAkBC,KAAlB,CAAwBC,SAAxB,0BAAoDhB,MAApD,iBAAiEE,MAAjE;AACD,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAGA,SAAO,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAED,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAzBD;;GAAMD,W;;MAAAA,W;AA2BN,eAAeA,WAAf","sourcesContent":["import { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Circle = styled.div`\n  position: fixed;\n  border-radius: 50%;\n  border: 2px solid #040234;\n  transition: opacity 0.3s ease 0s;\n  top: -30px;\n  left: -30px;\n  width: 60px;\n  height: 60px;\n  margin-right: 24px;\n  backface-visibility: hidden;\n  pointer-events: none;\n`;\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const [mouseX, setMouseX] = useState(null);\n  const [mouseY, setMouseY] = useState(null);\n  useEffect(() => {\n    const setFromEvent = (e) => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX]);\n  return <Circle ref={cricleRef} />;\n};\n\nexport default MouseCircle;\n"]},"metadata":{},"sourceType":"module"}