{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport styled from \"styled-components\";\nconst Main = styled.main.withConfig({\n  displayName: \"DefaultLayout__Main\",\n  componentId: \"sc-1vxtm7p-0\"\n})([\"*{color:black;}\"]);\nconst DotWrap = styled.div.withConfig({\n  displayName: \"DefaultLayout__DotWrap\",\n  componentId: \"sc-1vxtm7p-1\"\n})([\"position:fixed;left:0;right:0;top:0;bottom:0;width:100vw;height:100vh;z-index:0;opacity:1 !important;visibility:visible !important;span{position:absolute;width:100px;height:100px;border-radius:50px;}\"]);\n\nconst DefaultLayout = ({\n  children,\n  display,\n  className,\n  darkMode\n}) => {\n  const blob1 = useRef();\n  const blob2 = useRef();\n  const blob3 = useRef();\n  const colors = [\"#3570a2\", \"#de8e47\", \"#ce4539\", \"#e6c544\", \"#397f5f\"];\n\n  function getRandomXPosition() {\n    return Math.round(-50 + Math.random() * 1500);\n  }\n\n  function getRandomYPosition() {\n    return Math.round(-500 + Math.random() * 1500);\n  }\n\n  function getRandomDuration() {\n    return 40 + Math.random() * 2 + \"s\";\n  }\n\n  function setInitialProperties(blobs, colors) {\n    blobs.forEach(theThing => {\n      const circleSize = Math.round(30 + Math.random() * 100);\n      const whichColorNumber = Math.floor(Math.random() * 4) + 1;\n      theThing.style.backgroundColor = colors[whichColorNumber];\n      theThing.style.width = circleSize + \"px\";\n      theThing.style.height = circleSize + \"px\";\n      theThing.style.borderRadius = 0.5 * circleSize + \"px\";\n    });\n  }\n\n  function moveBlobStart(blobs) {\n    blobs.forEach(theThing => {\n      theThing.style.transitionDuration = getRandomDuration();\n      theThing.style.transform = `translate3d(${getRandomXPosition()}px, ${getRandomYPosition()}px, 0px)`;\n    });\n  }\n\n  function moveBlobNow(blob) {\n    blob.current.style.transitionDuration = getRandomDuration();\n    blob.current.style.transform = `translate3d(${getRandomXPosition()}px, ${getRandomYPosition()}px, 0px)`;\n  }\n\n  useEffect(() => {\n    const blobs = document.querySelectorAll(\".blob\");\n    setInitialProperties(blobs, colors);\n    const timeout = setTimeout(() => {\n      moveBlobStart(blobs);\n    }, getRandomDuration());\n    return () => clearTimeout(timeout);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    display: display,\n    darkMode: darkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(Main, {\n    darkMode: darkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, children), __jsx(Footer, {\n    darkMode: darkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), __jsx(DotWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    ref: blob1,\n    className: \"blob\",\n    onClick: () => moveBlobNow(blob1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    ref: blob2,\n    className: \"blob\",\n    onClick: () => moveBlobNow(blob2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    ref: blob3,\n    className: \"blob\",\n    onClick: () => moveBlobNow(blob3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DefaultLayout;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx"],"names":["useEffect","useRef","useState","Header","Footer","styled","Main","main","DotWrap","div","DefaultLayout","children","display","className","darkMode","blob1","blob2","blob3","colors","getRandomXPosition","Math","round","random","getRandomYPosition","getRandomDuration","setInitialProperties","blobs","forEach","theThing","circleSize","whichColorNumber","floor","style","backgroundColor","width","height","borderRadius","moveBlobStart","transitionDuration","transform","moveBlobNow","blob","current","document","querySelectorAll","timeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n  * {\n    color: black;\n  }\n`;\n\nconst DotWrap = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 0;\n  opacity: 1 !important;\n  visibility: visible !important;\n  span {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    border-radius: 50px;\n  }\n`;\n\nconst DefaultLayout = ({ children, display, className, darkMode }) => {\n  const blob1 = useRef();\n  const blob2 = useRef();\n  const blob3 = useRef();\n  const colors = [\"#3570a2\", \"#de8e47\", \"#ce4539\", \"#e6c544\", \"#397f5f\"];\n  function getRandomXPosition() {\n    return Math.round(-50 + Math.random() * 1500);\n  }\n\n  function getRandomYPosition() {\n    return Math.round(-500 + Math.random() * 1500);\n  }\n\n  function getRandomDuration() {\n    return 40 + Math.random() * 2 + \"s\";\n  }\n  function setInitialProperties(blobs, colors) {\n    blobs.forEach((theThing) => {\n      const circleSize = Math.round(30 + Math.random() * 100);\n      const whichColorNumber = Math.floor(Math.random() * 4) + 1;\n\n      theThing.style.backgroundColor = colors[whichColorNumber];\n      theThing.style.width = circleSize + \"px\";\n      theThing.style.height = circleSize + \"px\";\n      theThing.style.borderRadius = 0.5 * circleSize + \"px\";\n    });\n  }\n  function moveBlobStart(blobs) {\n    blobs.forEach((theThing) => {\n      theThing.style.transitionDuration = getRandomDuration();\n      theThing.style.transform = `translate3d(${getRandomXPosition()}px, ${getRandomYPosition()}px, 0px)`;\n    });\n  }\n  function moveBlobNow(blob) {\n    blob.current.style.transitionDuration = getRandomDuration();\n    blob.current.style.transform = `translate3d(${getRandomXPosition()}px, ${getRandomYPosition()}px, 0px)`;\n  }\n  useEffect(() => {\n    const blobs = document.querySelectorAll(\".blob\");\n    setInitialProperties(blobs, colors);\n    const timeout = setTimeout(() => {\n      moveBlobStart(blobs);\n    }, getRandomDuration());\n    return () => clearTimeout(timeout);\n  }, []);\n  return (\n    <>\n      <Header display={display} darkMode={darkMode} />\n      <Main darkMode={darkMode}>{children}</Main>\n      <Footer darkMode={darkMode} />\n      <DotWrap>\n        <span\n          ref={blob1}\n          className=\"blob\"\n          onClick={() => moveBlobNow(blob1)}\n        ></span>\n        <span\n          ref={blob2}\n          className=\"blob\"\n          onClick={() => moveBlobNow(blob2)}\n        ></span>\n        <span\n          ref={blob3}\n          className=\"blob\"\n          onClick={() => moveBlobNow(blob3)}\n        ></span>\n      </DotWrap>\n    </>\n  );\n};\n\nexport default DefaultLayout;\n"]},"metadata":{},"sourceType":"module"}