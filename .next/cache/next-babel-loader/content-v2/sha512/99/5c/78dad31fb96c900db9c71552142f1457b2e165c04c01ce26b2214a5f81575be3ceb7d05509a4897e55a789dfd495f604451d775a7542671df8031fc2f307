{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nconst hover = keyframes([\"0%{top:-25px;left:-25px;width:50px;height:50px;}100%{top:-30px;left:-30px;width:60px;height:60px;border:5px solid #18922B;}\"]);\nconst Circle = styled.div.withConfig({\n  displayName: \"MouseCircle__Circle\",\n  componentId: \"skopu-0\"\n})([\"position:absolute;border-radius:50%;border:2px solid #040234;transition:opacity 0.3s ease 0s;top:-25px;left:-25px;width:50px;height:50px;margin-right:24px;backface-visibility:hidden;pointer-events:none;z-index:9999;animation:\", \";animation-duration:0.4s;animation-fill-mode:forwards;animation-timing-function:cubic-bezier(0.12,1.07,1,0.12);@media (max-width:900px){display:none;}\"], props => props.contact ? hover : \"unset\");\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const {\n    0: mouseX,\n    1: setMouseX\n  } = useState(null);\n  const {\n    0: mouseY,\n    1: setMouseY\n  } = useState(null);\n  const {\n    0: mouseMove,\n    1: setMouseMove\n  } = useState(null);\n  const {\n    0: linkHovered,\n    1: setLinkHovered\n  } = useState(false);\n\n  const handleLinkHoverEvents = () => {\n    document.querySelectorAll(\"a\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n    document.querySelectorAll(\"button\").forEach(el => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n  };\n\n  useEffect(() => {\n    if (window === \"undefined\") {\n      return null;\n    }\n\n    const setFromEvent = e => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    handleLinkHoverEvents();\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n  return __jsx(Circle, {\n    ref: cricleRef,\n    linkHovered: linkHovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default MouseCircle;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx"],"names":["useState","useRef","useEffect","styled","keyframes","hover","Circle","div","props","contact","MouseCircle","cricleRef","mouseX","setMouseX","mouseY","setMouseY","mouseMove","setMouseMove","linkHovered","setLinkHovered","handleLinkHoverEvents","document","querySelectorAll","forEach","el","addEventListener","window","setFromEvent","e","pageX","pageY","mouseMoving","removeEventListener","current","style","transform"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAEA,MAAMC,KAAK,GAAGD,SAAH,iIAAX;AAgBA,MAAME,MAAM,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,oYAaIC,KAAD,IAAYA,KAAK,CAACC,OAAN,GAAgBJ,KAAhB,GAAwB,OAbvC,CAAZ;;AAsBA,MAAMK,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAGV,MAAM,EAAxB;AACA,QAAM;AAAA,OAACW,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACc,MAAD;AAAA,OAASC;AAAT,MAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACgB,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACkB,WAAD;AAAA,OAAcC;AAAd,MAAgCnB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMoB,qBAAqB,GAAG,MAAM;AAClCC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,GAA1B,EAA+BC,OAA/B,CAAwCC,EAAD,IAAQ;AAC7CA,MAAAA,EAAE,CAACC,gBAAH,CAAoB,WAApB,EAAiC,MAAMN,cAAc,CAAC,IAAD,CAArD;AACAK,MAAAA,EAAE,CAACC,gBAAH,CAAoB,UAApB,EAAgC,MAAMN,cAAc,CAAC,KAAD,CAApD;AACD,KAHD;AAIAE,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoCC,OAApC,CAA6CC,EAAD,IAAQ;AAClDA,MAAAA,EAAE,CAACC,gBAAH,CAAoB,WAApB,EAAiC,MAAMN,cAAc,CAAC,IAAD,CAArD;AACAK,MAAAA,EAAE,CAACC,gBAAH,CAAoB,UAApB,EAAgC,MAAMN,cAAc,CAAC,KAAD,CAApD;AACD,KAHD;AAID,GATD;;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,MAAM,KAAK,WAAf,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,UAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1Bf,MAAAA,SAAS,CAACe,CAAC,CAACC,KAAH,CAAT;AACAd,MAAAA,SAAS,CAACa,CAAC,CAACE,KAAH,CAAT;AACD,KAHD;;AAIA,UAAMC,WAAW,GAAG,MAAM;AACxBd,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD;;AAIAG,IAAAA,qBAAqB;AAErBM,IAAAA,MAAM,CAACD,gBAAP,CAAwB,WAAxB,EAAqCE,YAArC;AACAD,IAAAA,MAAM,CAACD,gBAAP,CAAwB,WAAxB,EAAqCM,WAArC;AAEA,WAAO,MAAM;AACXL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,WAA3B,EAAwCL,YAAxC;AACD,KAFD;AAGD,GApBQ,EAoBN,EApBM,CAAT;AAsBAzB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACsB,OAAV,CAAkBC,KAAlB,CAAwBC,SAAxB,GAAqC,gBAAevB,MAAO,OAAME,MAAO,SAAxE;AACD,GAFQ,EAEN,CAACF,MAAD,EAASE,MAAT,CAFM,CAAT;AAGA,SAAO,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH,SAAb;AAAwB,IAAA,WAAW,EAAEO,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5CD;;AA8CA,eAAeR,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst hover = keyframes`\n  0% { \n    top: -25px;\n  left: -25px;\n  width: 50px;\n  height: 50px;\n  }\n  100% {\n    top: -30px;\n  left: -30px;\n  width: 60px;\n  height: 60px;\n  border: 5px solid #18922B;\n  }\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 2px solid #040234;\n  transition: opacity 0.3s ease 0s;\n  top: -25px;\n  left: -25px;\n  width: 50px;\n  height: 50px;\n  margin-right: 24px;\n  backface-visibility: hidden;\n  pointer-events: none;\n  z-index: 9999;\n  animation: ${(props) => (props.contact ? hover : \"unset\")};\n  animation-duration: 0.4s;\n  animation-fill-mode: forwards;\n  animation-timing-function: cubic-bezier(0.12, 1.07, 1, 0.12);\n  @media (max-width: 900px) {\n    display: none;\n  }\n`;\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const [mouseX, setMouseX] = useState(null);\n  const [mouseY, setMouseY] = useState(null);\n  const [mouseMove, setMouseMove] = useState(null);\n  const [linkHovered, setLinkHovered] = useState(false);\n\n  const handleLinkHoverEvents = () => {\n    document.querySelectorAll(\"a\").forEach((el) => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n    document.querySelectorAll(\"button\").forEach((el) => {\n      el.addEventListener(\"mouseover\", () => setLinkHovered(true));\n      el.addEventListener(\"mouseout\", () => setLinkHovered(false));\n    });\n  };\n\n  useEffect(() => {\n    if (window === \"undefined\") {\n      return null;\n    }\n    const setFromEvent = (e) => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    handleLinkHoverEvents();\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n  return <Circle ref={cricleRef} linkHovered={linkHovered} />;\n};\n\nexport default MouseCircle;\n"]},"metadata":{},"sourceType":"module"}