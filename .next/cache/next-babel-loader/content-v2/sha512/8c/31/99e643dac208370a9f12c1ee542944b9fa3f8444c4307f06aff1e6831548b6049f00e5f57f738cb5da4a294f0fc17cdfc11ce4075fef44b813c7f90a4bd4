{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport styled from \"styled-components\";\nvar Main = styled.main.withConfig({\n  displayName: \"DefaultLayout__Main\",\n  componentId: \"sc-1vxtm7p-0\"\n})([\"background-color:white;*{color:black;}\"]);\n_c = Main;\nvar DotWrap = styled.div.withConfig({\n  displayName: \"DefaultLayout__DotWrap\",\n  componentId: \"sc-1vxtm7p-1\"\n})([\"position:fixed;left:0;right:0;top:0;bottom:0;width:100vw;height:100vh;z-index:-1;span{position:absolute;top:0;left:50%;background-color:red;}\"]);\n_c2 = DotWrap;\n\nvar DefaultLayout = function DefaultLayout(_ref) {\n  _s();\n\n  var children = _ref.children,\n      display = _ref.display,\n      className = _ref.className,\n      darkMode = _ref.darkMode;\n  var transforms = [\"transform\", \"msTransform\", \"webkitTransform\", \"mozTransform\", \"oTransform\"];\n  var colors = [\"#3570a2\", \"#de8e47\", \"#ce4539\", \"#e6c544\", \"#397f5f\"];\n  var transitionDurations = [\"transitionDuration\", \"msTransitionDuration\", \"webkitTransitionDuration\", \"mozTransitionDuration\", \"oTransitionDuration\"];\n  var transitionDurationProperty = transitionDurations;\n  var transformProperty = transforms;\n\n  function setInitialProperties(blobs, colors) {\n    blobs.forEach(function (theThing) {\n      var circleSize = Math.round(30 + Math.random() * 100);\n      var whichColorNumber = Math.floor(Math.random() * 4) + 1;\n      console.log(\"hello\", whichColorNumber);\n      theThing.style.backgroundColor = colors[whichColorNumber];\n      theThing.style.width = circleSize + \"px\";\n      theThing.style.height = circleSize + \"px\";\n      theThing.style.borderRadius = 0.5 * circleSize + \"px\";\n      setTranslate3DTransform(theThing);\n    });\n    setTimeout(kickOffTransition(blobs), 100);\n  }\n\n  function kickOffTransition(blobs) {\n    blobs.forEach(function (theThing) {\n      theThing.addEventListener(\"transitionend\", updatePosition, false);\n      theThing.addEventListener(\"webkitTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"mozTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"msTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"oTransitionEnd\", updatePosition, false);\n      setTranslate3DTransform(theThing);\n      setTransitionDuration(theThing);\n    });\n  }\n\n  function updatePosition(e) {\n    var theThing = e.currentTarget;\n\n    if (e.propertyName.indexOf(\"transform\") != -1) {\n      setTranslate3DTransform(theThing);\n      setTransitionDuration(theThing);\n    }\n  }\n\n  function getRandomXPosition() {\n    return Math.round(-50 + Math.random() * 1500);\n  }\n\n  function getRandomYPosition() {\n    return Math.round(-500 + Math.random() * 1500);\n  }\n\n  function getRandomDuration() {\n    return 40 + Math.random() * 2 + \"s\";\n  }\n\n  function getSupportedPropertyName(properties) {\n    properties.forEach(function (property) {\n      if (typeof document.body.style[property] != \"undefined\") {\n        return property;\n      }\n    });\n    return null;\n  }\n\n  function setTranslate3DTransform(element) {\n    element.style[transformProperty] = \"translate3d(\" + getRandomXPosition() + \"px\" + \", \" + getRandomYPosition() + \"px\" + \", 0)\";\n  }\n\n  function setTransitionDuration(element) {\n    if (transitionDurationProperty) {\n      element.style[transitionDurationProperty] = getRandomDuration();\n    }\n  }\n\n  useEffect(function () {\n    var blobs = document.querySelectorAll(\".blob\");\n    setInitialProperties(blobs, colors);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    display: display,\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), __jsx(Main, {\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, children), __jsx(Footer, {\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), __jsx(DotWrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"blob\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"blob\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    className: \"blob\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(DefaultLayout, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = DefaultLayout;\nexport default DefaultLayout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"DotWrap\");\n$RefreshReg$(_c3, \"DefaultLayout\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx"],"names":["useEffect","useRef","useState","Header","Footer","styled","Main","main","DotWrap","div","DefaultLayout","children","display","className","darkMode","transforms","colors","transitionDurations","transitionDurationProperty","transformProperty","setInitialProperties","blobs","forEach","theThing","circleSize","Math","round","random","whichColorNumber","floor","console","log","style","backgroundColor","width","height","borderRadius","setTranslate3DTransform","setTimeout","kickOffTransition","addEventListener","updatePosition","setTransitionDuration","e","currentTarget","propertyName","indexOf","getRandomXPosition","getRandomYPosition","getRandomDuration","getSupportedPropertyName","properties","property","document","body","element","querySelectorAll"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n  background-color: white;\n  * {\n    color: black;\n  }\n`;\n\nconst DotWrap = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n  span {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    background-color: red;\n  }\n`;\n\nconst DefaultLayout = ({ children, display, className, darkMode }) => {\n  const transforms = [\n    \"transform\",\n    \"msTransform\",\n    \"webkitTransform\",\n    \"mozTransform\",\n    \"oTransform\",\n  ];\n  const colors = [\"#3570a2\", \"#de8e47\", \"#ce4539\", \"#e6c544\", \"#397f5f\"];\n  const transitionDurations = [\n    \"transitionDuration\",\n    \"msTransitionDuration\",\n    \"webkitTransitionDuration\",\n    \"mozTransitionDuration\",\n    \"oTransitionDuration\",\n  ];\n  const transitionDurationProperty = transitionDurations;\n\n  const transformProperty = transforms;\n\n  function setInitialProperties(blobs, colors) {\n    blobs.forEach((theThing) => {\n      const circleSize = Math.round(30 + Math.random() * 100);\n      const whichColorNumber = Math.floor(Math.random() * 4) + 1;\n      console.log(\"hello\", whichColorNumber);\n      theThing.style.backgroundColor = colors[whichColorNumber];\n      theThing.style.width = circleSize + \"px\";\n      theThing.style.height = circleSize + \"px\";\n      theThing.style.borderRadius = 0.5 * circleSize + \"px\";\n      setTranslate3DTransform(theThing);\n    });\n    setTimeout(kickOffTransition(blobs), 100);\n  }\n\n  function kickOffTransition(blobs) {\n    blobs.forEach((theThing) => {\n      theThing.addEventListener(\"transitionend\", updatePosition, false);\n      theThing.addEventListener(\"webkitTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"mozTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"msTransitionEnd\", updatePosition, false);\n      theThing.addEventListener(\"oTransitionEnd\", updatePosition, false);\n\n      setTranslate3DTransform(theThing);\n      setTransitionDuration(theThing);\n    });\n  }\n\n  function updatePosition(e) {\n    var theThing = e.currentTarget;\n\n    if (e.propertyName.indexOf(\"transform\") != -1) {\n      setTranslate3DTransform(theThing);\n      setTransitionDuration(theThing);\n    }\n  }\n\n  function getRandomXPosition() {\n    return Math.round(-50 + Math.random() * 1500);\n  }\n\n  function getRandomYPosition() {\n    return Math.round(-500 + Math.random() * 1500);\n  }\n\n  function getRandomDuration() {\n    return 40 + Math.random() * 2 + \"s\";\n  }\n\n  function getSupportedPropertyName(properties) {\n    properties.forEach((property) => {\n      if (typeof document.body.style[property] != \"undefined\") {\n        return property;\n      }\n    });\n    return null;\n  }\n\n  function setTranslate3DTransform(element) {\n    element.style[transformProperty] =\n      \"translate3d(\" +\n      getRandomXPosition() +\n      \"px\" +\n      \", \" +\n      getRandomYPosition() +\n      \"px\" +\n      \", 0)\";\n  }\n\n  function setTransitionDuration(element) {\n    if (transitionDurationProperty) {\n      element.style[transitionDurationProperty] = getRandomDuration();\n    }\n  }\n  useEffect(() => {\n    const blobs = document.querySelectorAll(\".blob\");\n    setInitialProperties(blobs, colors);\n  }, []);\n  return (\n    <>\n      <Header display={display} darkMode={darkMode} />\n      <Main darkMode={darkMode}>{children}</Main>\n      <Footer darkMode={darkMode} />\n      <DotWrap>\n        <span className=\"blob\"></span>\n        <span className=\"blob\"></span>\n        <span className=\"blob\"></span>\n      </DotWrap>\n    </>\n  );\n};\n\nexport default DefaultLayout;\n"]},"metadata":{},"sourceType":"module"}