{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nconst Circle = styled.div.withConfig({\n  displayName: \"MouseCircle__Circle\",\n  componentId: \"skopu-0\"\n})([\"position:absolute;border-radius:50%;border:2px solid #040234;transition:opacity 0.3s ease 0s;top:-30px;left:-30px;width:60px;height:60px;margin-right:24px;backface-visibility:hidden;pointer-events:none;z-index:9999;\"]);\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const {\n    0: mouseX,\n    1: setMouseX\n  } = useState(null);\n  const {\n    0: mouseY,\n    1: setMouseY\n  } = useState(null);\n  const {\n    0: mouseMove,\n    1: setMouseMove\n  } = useState(null);\n  useEffect(() => {\n    const setFromEvent = e => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX]);\n  return __jsx(Circle, {\n    ref: cricleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default MouseCircle;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/MouseCircle/index.jsx"],"names":["useState","useRef","useEffect","styled","Circle","div","MouseCircle","cricleRef","mouseX","setMouseX","mouseY","setMouseY","mouseMove","setMouseMove","setFromEvent","e","pageX","pageY","mouseMoving","window","addEventListener","removeEventListener","current","style","transform"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,+NAAZ;;AAeA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AACA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACU,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BN,MAAAA,SAAS,CAACM,CAAC,CAACC,KAAH,CAAT;AACAL,MAAAA,SAAS,CAACI,CAAC,CAACE,KAAH,CAAT;AACD,KAHD;;AAIA,UAAMC,WAAW,GAAG,MAAM;AACxBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD;;AAIAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCN,YAArC;AACAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCF,WAArC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCP,YAAxC;AACD,KAFD;AAGD,GAfQ,EAeN,EAfM,CAAT;AAiBAZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACe,OAAV,CAAkBC,KAAlB,CAAwBC,SAAxB,GAAqC,gBAAehB,MAAO,OAAME,MAAO,SAAxE;AACD,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAGA,SAAO,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAED,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Circle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 2px solid #040234;\n  transition: opacity 0.3s ease 0s;\n  top: -30px;\n  left: -30px;\n  width: 60px;\n  height: 60px;\n  margin-right: 24px;\n  backface-visibility: hidden;\n  pointer-events: none;\n  z-index: 9999;\n`;\n\nconst MouseCircle = () => {\n  const cricleRef = useRef();\n  const [mouseX, setMouseX] = useState(null);\n  const [mouseY, setMouseY] = useState(null);\n  const [mouseMove, setMouseMove] = useState(null);\n  useEffect(() => {\n    const setFromEvent = (e) => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n    const mouseMoving = () => {\n      setMouseMove(true);\n    };\n\n    window.addEventListener(\"mousemove\", setFromEvent);\n    window.addEventListener(\"mousemove\", mouseMoving);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    cricleRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX]);\n  return <Circle ref={cricleRef} />;\n};\n\nexport default MouseCircle;\n"]},"metadata":{},"sourceType":"module"}