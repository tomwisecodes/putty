{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/Layouts/DefaultLayout/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport MouseCircle from \"../../components/MouseCircle\";\nimport styled from \"styled-components\";\nimport ContactBlob from \"../../components/ContactBlob\";\nimport MouseParticles from \"react-mouse-particles\";\nconst Chaos = styled.button.withConfig({\n  displayName: \"DefaultLayout__Chaos\",\n  componentId: \"sc-1vxtm7p-0\"\n})([\"position:fixed;bottom:0;right:0;background-color:\", \";padding:30px;cursor:pointer;color:white;font-size:18px;border:none;outline:none;z-index:10;\"], props => props.chaos ? \"#0800C9\" : \"#A90000\");\nconst PageWrapper = styled.div.withConfig({\n  displayName: \"DefaultLayout__PageWrapper\",\n  componentId: \"sc-1vxtm7p-1\"\n})([\"margin-bottom:96px;@media (max-width:900px){margin-bottom:0;}\"]);\n\nconst DefaultLayout = ({\n  children\n}) => {\n  const {\n    0: chaos,\n    1: setChaos\n  } = useState(false);\n  const {\n    0: counter,\n    1: setCounter\n  } = useState(1);\n  let theStuff = null;\n\n  function getPlusOrMinus() {\n    return Math.round(Math.random()) * 2 - 1;\n  }\n\n  function getRandomDuration() {\n    return Math.random() * Math.random() * 100;\n  }\n\n  function getRandomXPosition() {\n    const X = getPlusOrMinus() * Math.round(-50 + Math.random() * 1500);\n    return X;\n  }\n\n  function getRandomYPosition() {\n    const Y = getPlusOrMinus() * Math.round(-500 + Math.random() * 1500);\n    return Y;\n  }\n\n  function getRandomRotate(max) {\n    const R = getPlusOrMinus() * Math.floor(Math.random() * Math.floor(max));\n    return R;\n  }\n\n  function addStyles(item) {\n    item.style.transform = \"translate3d(\" + getRandomXPosition() + \"px\" + \", \" + getRandomYPosition() + \"px\" + \", 0)rotate(\" + getRandomRotate(720) + \"deg)\";\n  }\n\n  function addTime(item, time) {\n    item.style.transitionDuration = time + \"s\";\n  } // useEffect(() => {\n  //   if (chaos) {\n  //     const interval = setInterval(() => {\n  //       setCounter((counter) => counter + 1);\n  //     }, 1000);\n  //     return () => clearInterval(interval);\n  //   } else {\n  //     setCounter(1);\n  //   }\n  // }, [chaos]);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function isItYourTimeToChange() {\n  //     const counterSeconds = counter + \"s\";\n  //     if (counter > 1) {\n  //       for (const [key, value] of Object.entries(theStuff)) {\n  //         if (value.style.transitionDuration === counterSeconds) {\n  //           addStyles(theStuff[key]);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   isItYourTimeToChange();\n  // }, [counter]);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function elementsGoWild() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       // When the user clicks on an element\n  //       theStuff[i].onclick = function () {\n  //         theStuff[i].style.padding = \"36px\";\n  //         addStyles(theStuff[i]);\n  //         addTime(theStuff[i], roundedTime);\n  //       };\n  //       //defualt fire\n  //       theStuff[i].style.padding = \"36px\";\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   function elementsBackToWork() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       addStyles(theStuff[i]);\n  //       theStuff[i].style.padding = \"inherit\";\n  //       theStuff[i].style.transitionDuration = \"1.2s\";\n  //     }\n  //   }\n  //   if (chaos) {\n  //     elementsGoWild();\n  //   } else {\n  //     elementsBackToWork();\n  //   }\n  // }, [chaos]);\n  // /// Fires on first load\n  // useEffect(() => {\n  //   function wrapChars(str) {\n  //     // return str.replace(/\\w/g, <span className=\"c\">$&</span>);\n  //     const replacement = str.replace(\n  //       /./gm,\n  //       \"<span class=\" + \"floater\" + \">$&</span>\"\n  //     );\n  //     return replacement;\n  //   }\n  //   function wrapText() {\n  //     const theTest = document.querySelectorAll(\".c\");\n  //     for (let i = 0; i < theTest.length; i++) {\n  //       const theTestSpanned = wrapChars(theTest[i].innerHTML);\n  //       theTest[i].innerHTML = theTestSpanned;\n  //     }\n  //   }\n  //   wrapText();\n  // }, []);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function initialLoadUp() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       //defualt fire\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   initialLoadUp();\n  // }, []);\n  // function isTouchDevice() {\n  //   if (typeof window !== \"undefined\") {\n  //     return (\n  //       \"ontouchstart\" in window ||\n  //       navigator.maxTouchPoints > 0 ||\n  //       navigator.msMaxTouchPoints > 0\n  //     );\n  //   }\n  //   return null;\n  // }\n  // useEffect(() => {\n  //   isTouchDevice();\n  // }, []);\n\n\n  return __jsx(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, children), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), __jsx(ContactBlob, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DefaultLayout;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/Layouts/DefaultLayout/index.jsx"],"names":["useEffect","useRef","useState","Header","Footer","MouseCircle","styled","ContactBlob","MouseParticles","Chaos","button","props","chaos","PageWrapper","div","DefaultLayout","children","setChaos","counter","setCounter","theStuff","getPlusOrMinus","Math","round","random","getRandomDuration","getRandomXPosition","X","getRandomYPosition","Y","getRandomRotate","max","R","floor","addStyles","item","style","transform","addTime","time","transitionDuration"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,0JAIYC,KAAD,IAAYA,KAAK,CAACC,KAAN,GAAc,SAAd,GAA0B,SAJjD,CAAX;AAcA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,qEAAjB;;AAOA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM;AAAA,OAACJ,KAAD;AAAA,OAAQK;AAAR,MAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACgB,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,CAAD,CAAtC;AAEA,MAAIkB,QAAQ,GAAG,IAAf;;AACA,WAASC,cAAT,GAA0B;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,IAA4B,CAA5B,GAAgC,CAAvC;AACD;;AACD,WAASC,iBAAT,GAA6B;AAC3B,WAAOH,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACE,MAAL,EAAhB,GAAgC,GAAvC;AACD;;AACD,WAASE,kBAAT,GAA8B;AAC5B,UAAMC,CAAC,GAAGN,cAAc,KAAKC,IAAI,CAACC,KAAL,CAAW,CAAC,EAAD,GAAMD,IAAI,CAACE,MAAL,KAAgB,IAAjC,CAA7B;AACA,WAAOG,CAAP;AACD;;AACD,WAASC,kBAAT,GAA8B;AAC5B,UAAMC,CAAC,GAAGR,cAAc,KAAKC,IAAI,CAACC,KAAL,CAAW,CAAC,GAAD,GAAOD,IAAI,CAACE,MAAL,KAAgB,IAAlC,CAA7B;AACA,WAAOK,CAAP;AACD;;AACD,WAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,UAAMC,CAAC,GAAGX,cAAc,KAAKC,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACW,KAAL,CAAWF,GAAX,CAA3B,CAA7B;AACA,WAAOC,CAAP;AACD;;AAED,WAASE,SAAT,CAAmBC,IAAnB,EAAyB;AACvBA,IAAAA,IAAI,CAACC,KAAL,CAAWC,SAAX,GACE,iBACAX,kBAAkB,EADlB,GAEA,IAFA,GAGA,IAHA,GAIAE,kBAAkB,EAJlB,GAKA,IALA,GAMA,aANA,GAOAE,eAAe,CAAC,GAAD,CAPf,GAQA,MATF;AAUD;;AACD,WAASQ,OAAT,CAAiBH,IAAjB,EAAuBI,IAAvB,EAA6B;AAC3BJ,IAAAA,IAAI,CAACC,KAAL,CAAWI,kBAAX,GAAgCD,IAAI,GAAG,GAAvC;AACD,GAtCqC,CAwCtvB,QAAP,CAXF,EAYE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAmCD,CAxLD;;AA0LA,eAAeD,aAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport MouseCircle from \"../../components/MouseCircle\";\nimport styled from \"styled-components\";\nimport ContactBlob from \"../../components/ContactBlob\";\nimport MouseParticles from \"react-mouse-particles\";\n\nconst Chaos = styled.button`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  background-color: ${(props) => (props.chaos ? \"#0800C9\" : \"#A90000\")};\n  padding: 30px;\n  cursor: pointer;\n  color: white;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  z-index: 10;\n`;\n\nconst PageWrapper = styled.div`\n  margin-bottom: 96px;\n  @media (max-width: 900px) {\n    margin-bottom: 0;\n  }\n`;\n\nconst DefaultLayout = ({ children }) => {\n  const [chaos, setChaos] = useState(false);\n  const [counter, setCounter] = useState(1);\n\n  let theStuff = null;\n  function getPlusOrMinus() {\n    return Math.round(Math.random()) * 2 - 1;\n  }\n  function getRandomDuration() {\n    return Math.random() * Math.random() * 100;\n  }\n  function getRandomXPosition() {\n    const X = getPlusOrMinus() * Math.round(-50 + Math.random() * 1500);\n    return X;\n  }\n  function getRandomYPosition() {\n    const Y = getPlusOrMinus() * Math.round(-500 + Math.random() * 1500);\n    return Y;\n  }\n  function getRandomRotate(max) {\n    const R = getPlusOrMinus() * Math.floor(Math.random() * Math.floor(max));\n    return R;\n  }\n\n  function addStyles(item) {\n    item.style.transform =\n      \"translate3d(\" +\n      getRandomXPosition() +\n      \"px\" +\n      \", \" +\n      getRandomYPosition() +\n      \"px\" +\n      \", 0)rotate(\" +\n      getRandomRotate(720) +\n      \"deg)\";\n  }\n  function addTime(item, time) {\n    item.style.transitionDuration = time + \"s\";\n  }\n\n  // useEffect(() => {\n  //   if (chaos) {\n  //     const interval = setInterval(() => {\n  //       setCounter((counter) => counter + 1);\n  //     }, 1000);\n  //     return () => clearInterval(interval);\n  //   } else {\n  //     setCounter(1);\n  //   }\n  // }, [chaos]);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function isItYourTimeToChange() {\n  //     const counterSeconds = counter + \"s\";\n  //     if (counter > 1) {\n  //       for (const [key, value] of Object.entries(theStuff)) {\n  //         if (value.style.transitionDuration === counterSeconds) {\n  //           addStyles(theStuff[key]);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   isItYourTimeToChange();\n  // }, [counter]);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function elementsGoWild() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       // When the user clicks on an element\n  //       theStuff[i].onclick = function () {\n  //         theStuff[i].style.padding = \"36px\";\n  //         addStyles(theStuff[i]);\n  //         addTime(theStuff[i], roundedTime);\n  //       };\n\n  //       //defualt fire\n  //       theStuff[i].style.padding = \"36px\";\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   function elementsBackToWork() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       addStyles(theStuff[i]);\n  //       theStuff[i].style.padding = \"inherit\";\n  //       theStuff[i].style.transitionDuration = \"1.2s\";\n  //     }\n  //   }\n  //   if (chaos) {\n  //     elementsGoWild();\n  //   } else {\n  //     elementsBackToWork();\n  //   }\n  // }, [chaos]);\n\n  // /// Fires on first load\n  // useEffect(() => {\n  //   function wrapChars(str) {\n  //     // return str.replace(/\\w/g, <span className=\"c\">$&</span>);\n  //     const replacement = str.replace(\n  //       /./gm,\n  //       \"<span class=\" + \"floater\" + \">$&</span>\"\n  //     );\n  //     return replacement;\n  //   }\n  //   function wrapText() {\n  //     const theTest = document.querySelectorAll(\".c\");\n\n  //     for (let i = 0; i < theTest.length; i++) {\n  //       const theTestSpanned = wrapChars(theTest[i].innerHTML);\n  //       theTest[i].innerHTML = theTestSpanned;\n  //     }\n  //   }\n\n  //   wrapText();\n  // }, []);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n\n  //   function initialLoadUp() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       //defualt fire\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   initialLoadUp();\n  // }, []);\n\n  // function isTouchDevice() {\n  //   if (typeof window !== \"undefined\") {\n  //     return (\n  //       \"ontouchstart\" in window ||\n  //       navigator.maxTouchPoints > 0 ||\n  //       navigator.msMaxTouchPoints > 0\n  //     );\n  //   }\n  //   return null;\n  // }\n  // useEffect(() => {\n  //   isTouchDevice();\n  // }, []);\n  return (\n    <PageWrapper>\n      <Header />\n      {/* <h1>{counter}</h1> */}\n      {/* <Chaos\n        onClick={() => {\n          setChaos((i) => !i);\n        }}\n        chaos={chaos}\n      >\n        {chaos ? \"Clean up\" : \"Start some chaos\"}\n      </Chaos> */}\n      <main>{children}</main>\n      <Footer />\n\n      <ContactBlob />\n\n      {/* {isTouchDevice && <MouseCircle />} */}\n      {/* <MouseCircle /> */}\n\n      {/* \n      <style jsx global>\n        {`\n          .floater {\n            transition-duration: 1.2s;\n            transition-timing-function: linear;\n            cursor: ${chaos ? \"pointer\" : \"inherit\"};\n            position: ${chaos ? \"fixed\" : \"relative\"};\n            border: ${chaos ? \"solid 6px pink\" : \"none\"};\n            border-radius: ${chaos ? \"1000px\" : \"unset\"};\n          }\n        `}\n      </style> */}\n    </PageWrapper>\n  );\n};\n\nexport default DefaultLayout;\n"]},"metadata":{},"sourceType":"module"}