{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/LogoGrid/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport Client from \"./client\";\nimport styled from \"styled-components\";\nimport clients from \"../../data\";\nimport Image from \"next/image\";\nvar LogoCont = styled.div.withConfig({\n  displayName: \"LogoGrid__LogoCont\",\n  componentId: \"w7yuc0-0\"\n})([\"width:144px;height:144px;background-color:red;\"]);\n_c = LogoCont;\nvar ImgWrap = styled.div.withConfig({\n  displayName: \"LogoGrid__ImgWrap\",\n  componentId: \"w7yuc0-1\"\n})([\"width:100%;height:100%;object-fit:cover;\"]);\n_c2 = ImgWrap;\nvar LogoContain = styled.ul.withConfig({\n  displayName: \"LogoGrid__LogoContain\",\n  componentId: \"w7yuc0-2\"\n})([\"display:flex;flex-wrap:wrap;justify-content:center;margin-top:\", \";li{font-size:42px;line-height:42px;margin-right:12px;cursor:default;position:relative;@media (max-width:769px){z-index:-1;}}@media (max-width:769px){justify-content:center;text-align:center;li{width:100%;font-size:36px;line-height:42px;}}\"], function (props) {\n  return props.mt ? props.mt : \"0px\";\n});\n_c3 = LogoContain;\n\nvar LogoGrid = function LogoGrid(_ref) {\n  _s();\n\n  var type = _ref.type,\n      mt = _ref.mt,\n      mouseX = _ref.mouseX,\n      mouseY = _ref.mouseY;\n  var designerCli = clients.filter(function (_) {\n    return _.ux || _.graphic;\n  });\n  var devCli = clients.filter(function (_) {\n    return _.dev;\n  });\n  var selectedClients = type === \"designer\" ? designerCli : devCli;\n\n  var _useState = useState(false),\n      showLogoCont = _useState[0],\n      setShowLogoCont = _useState[1];\n\n  var _useState2 = useState(false),\n      theLogo = _useState2[0],\n      setTheLogo = _useState2[1];\n\n  var logoContianRef = useRef(); // useEffect(() => {\n  //   logoContianRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  // }, [mouseX, mouseY]);\n\n  return __jsx(React.Fragment, null, __jsx(LogoContain, {\n    mt: mt,\n    onMouseEnter: function onMouseEnter() {\n      return setShowLogoCont(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      setShowLogoCont(false);\n      setTheLogo(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, selectedClients.map(function (client, i) {\n    return __jsx(Client, {\n      key: i,\n      client: client,\n      selectedClients: selectedClients,\n      i: i,\n      setTheLogo: setTheLogo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    });\n  }), __jsx(LogoCont, {\n    showLogoCont: !!theLogo,\n    ref: logoContianRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(ImgWrap, {\n    showLogoCont: !!theLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, theLogo && __jsx(Image, {\n    src: theLogo,\n    alt: \"logo\",\n    layout: \"fill\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(LogoGrid, \"vxgWEva5Z125wh6Q01gooS8Tpro=\");\n\n_c4 = LogoGrid;\nexport default LogoGrid;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"LogoCont\");\n$RefreshReg$(_c2, \"ImgWrap\");\n$RefreshReg$(_c3, \"LogoContain\");\n$RefreshReg$(_c4, \"LogoGrid\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/LogoGrid/index.jsx"],"names":["useState","useRef","useEffect","Client","styled","clients","Image","LogoCont","div","ImgWrap","LogoContain","ul","props","mt","LogoGrid","type","mouseX","mouseY","designerCli","filter","_","ux","graphic","devCli","dev","selectedClients","showLogoCont","setShowLogoCont","theLogo","setTheLogo","logoContianRef","map","client","i"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport Client from \"./client\";\nimport styled from \"styled-components\";\nimport clients from \"../../data\";\nimport Image from \"next/image\";\n\nconst LogoCont = styled.div`\n  width: 144px;\n  height: 144px;\n  background-color: red;\n`;\n\nconst ImgWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst LogoContain = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(props) => (props.mt ? props.mt : \"0px\")};\n  li {\n    font-size: 42px;\n    line-height: 42px;\n    margin-right: 12px;\n    cursor: default;\n    position: relative;\n    @media (max-width: 769px) {\n      z-index: -1;\n    }\n  }\n  @media (max-width: 769px) {\n    justify-content: center;\n    text-align: center;\n    li {\n      width: 100%;\n      font-size: 36px;\n      line-height: 42px;\n    }\n  }\n`;\n\nconst LogoGrid = ({ type, mt, mouseX, mouseY }) => {\n  const designerCli = clients.filter((_) => _.ux || _.graphic);\n  const devCli = clients.filter((_) => _.dev);\n  const selectedClients = type === \"designer\" ? designerCli : devCli;\n  const [showLogoCont, setShowLogoCont] = useState(false);\n  const [theLogo, setTheLogo] = useState(false);\n  const logoContianRef = useRef();\n  // useEffect(() => {\n  //   logoContianRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  // }, [mouseX, mouseY]);\n\n  return (\n    <>\n      <LogoContain\n        mt={mt}\n        onMouseEnter={() => setShowLogoCont(true)}\n        onMouseLeave={() => {\n          setShowLogoCont(false);\n          setTheLogo(false);\n        }}\n      >\n        {selectedClients.map((client, i) => (\n          <Client\n            key={i}\n            client={client}\n            selectedClients={selectedClients}\n            i={i}\n            setTheLogo={setTheLogo}\n          />\n        ))}\n        <LogoCont showLogoCont={!!theLogo} ref={logoContianRef}>\n          <ImgWrap showLogoCont={!!theLogo}>\n            {theLogo && <Image src={theLogo} alt={`logo`} layout=\"fill\" />}\n          </ImgWrap>\n        </LogoCont>\n      </LogoContain>\n    </>\n  );\n};\n\nexport default LogoGrid;\n"]},"metadata":{},"sourceType":"module"}