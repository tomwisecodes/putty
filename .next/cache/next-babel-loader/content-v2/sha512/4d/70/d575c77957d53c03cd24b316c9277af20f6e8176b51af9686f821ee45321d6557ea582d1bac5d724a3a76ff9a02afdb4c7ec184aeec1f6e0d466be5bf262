{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/LogoGrid/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport Client from \"./client\";\nimport styled, { keyframes } from \"styled-components\";\nimport clients from \"../../data\";\nimport Image from \"next/image\";\nconst heightAnimation = keyframes([\"from{height:0;}to{height:144px;}\"]);\nconst LogoCont = styled.div.withConfig({\n  displayName: \"LogoGrid__LogoCont\",\n  componentId: \"w7yuc0-0\"\n})([\"position:absolute;z-index:10;top:-144px;left:-144px;visibility:\", \";opacity:\", \";width:144px;height:144px;background-color:red;.wrap-inner{width:100% overflow:hidden;height:\", \";}img{position:absolute;bottom:0;left:0;height:50%;width:100%;z-index:0;border-radius:4px;}\"], props => props.showLogoCont ? \"visible\" : \"hidden\", props => props.showLogoCont ? \"1\" : \"0\", props => props.showLogoCont ? \"100%\" : \"0\"); // animation-name: ${(props) =>\n//   props.showLogoCont ? heightAnimation : \"unset\"};\n// animation-duration: 0.3s;\n// animation-fill-mode: forwards;\n// animation-timing-function: ease-in-out;\n\nconst LogoContain = styled.ul.withConfig({\n  displayName: \"LogoGrid__LogoContain\",\n  componentId: \"w7yuc0-1\"\n})([\"display:flex;flex-wrap:wrap;justify-content:center;margin-top:\", \";li{font-size:34px;line-height:42px;margin-right:12px;cursor:default;position:relative;}\"], props => props.mt ? props.mt : \"0px\");\n\nconst LogoGrid = ({\n  type,\n  mt,\n  mouseX,\n  mouseY\n}) => {\n  const designerCli = clients.filter(_ => _.ux || _.graphic);\n  const devCli = clients.filter(_ => _.dev);\n  const selectedClients = type === \"designer\" ? designerCli : devCli;\n  const {\n    0: showLogoCont,\n    1: setShowLogoCont\n  } = useState(false);\n  const {\n    0: theLogo,\n    1: setTheLogo\n  } = useState(false);\n  const logoContianRef = useRef();\n  useEffect(() => {\n    logoContianRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n  return __jsx(React.Fragment, null, __jsx(LogoContain, {\n    mt: mt,\n    onMouseEnter: () => setShowLogoCont(true),\n    onMouseLeave: () => {\n      setShowLogoCont(false);\n      setTheLogo(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, selectedClients.map((client, i) => __jsx(Client, {\n    key: client.name,\n    client: client,\n    selectedClients: selectedClients,\n    i: i,\n    setTheLogo: setTheLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), __jsx(LogoCont, {\n    showLogoCont: theLogo,\n    ref: logoContianRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"wrap-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, theLogo && __jsx(Image, {\n    src: theLogo,\n    alt: `logo`,\n    layout: \"fill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default LogoGrid;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/LogoGrid/index.jsx"],"names":["useState","useRef","useEffect","Client","styled","keyframes","clients","Image","heightAnimation","LogoCont","div","props","showLogoCont","LogoContain","ul","mt","LogoGrid","type","mouseX","mouseY","designerCli","filter","_","ux","graphic","devCli","dev","selectedClients","setShowLogoCont","theLogo","setTheLogo","logoContianRef","current","style","transform","map","client","i","name"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport Client from \"./client\";\nimport styled, { keyframes } from \"styled-components\";\nimport clients from \"../../data\";\nimport Image from \"next/image\";\n\nconst heightAnimation = keyframes`\n from {\n   height: 0;\n }\n to {\n   height: 144px;\n }\n`;\nconst LogoCont = styled.div`\n  position: absolute;\n  z-index: 10;\n  top: -144px;\n  left: -144px;\n  visibility: ${(props) => (props.showLogoCont ? \"visible\" : \"hidden\")};\n  opacity: ${(props) => (props.showLogoCont ? \"1\" : \"0\")};\n  width: 144px;\n  height: 144px;\n  background-color: red;\n  .wrap-inner {\n    width: 100%\n    overflow: hidden;\n    height: ${(props) => (props.showLogoCont ? \"100%\" : \"0\")};\n  }\n  img {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 50%;\n    width: 100%;\n    z-index: 0;\n    border-radius: 4px;\n  }\n`;\n\n// animation-name: ${(props) =>\n//   props.showLogoCont ? heightAnimation : \"unset\"};\n// animation-duration: 0.3s;\n// animation-fill-mode: forwards;\n// animation-timing-function: ease-in-out;\n\nconst LogoContain = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(props) => (props.mt ? props.mt : \"0px\")};\n  li {\n    font-size: 34px;\n    line-height: 42px;\n    margin-right: 12px;\n    cursor: default;\n    position: relative;\n  }\n`;\n\nconst LogoGrid = ({ type, mt, mouseX, mouseY }) => {\n  const designerCli = clients.filter((_) => _.ux || _.graphic);\n  const devCli = clients.filter((_) => _.dev);\n  const selectedClients = type === \"designer\" ? designerCli : devCli;\n  const [showLogoCont, setShowLogoCont] = useState(false);\n  const [theLogo, setTheLogo] = useState(false);\n  const logoContianRef = useRef();\n  useEffect(() => {\n    logoContianRef.current.style.transform = `translate3d( ${mouseX}px, ${mouseY}px, 0) `;\n  }, [mouseX, mouseY]);\n\n  return (\n    <>\n      <LogoContain\n        mt={mt}\n        onMouseEnter={() => setShowLogoCont(true)}\n        onMouseLeave={() => {\n          setShowLogoCont(false);\n          setTheLogo(false);\n        }}\n      >\n        {selectedClients.map((client, i) => (\n          <Client\n            key={client.name}\n            client={client}\n            selectedClients={selectedClients}\n            i={i}\n            setTheLogo={setTheLogo}\n          />\n        ))}\n        <LogoCont showLogoCont={theLogo} ref={logoContianRef}>\n          <div className=\"wrap-inner\">\n            {theLogo && <Image src={theLogo} alt={`logo`} layout=\"fill\" />}\n          </div>\n        </LogoCont>\n      </LogoContain>\n    </>\n  );\n};\n\nexport default LogoGrid;\n"]},"metadata":{},"sourceType":"module"}