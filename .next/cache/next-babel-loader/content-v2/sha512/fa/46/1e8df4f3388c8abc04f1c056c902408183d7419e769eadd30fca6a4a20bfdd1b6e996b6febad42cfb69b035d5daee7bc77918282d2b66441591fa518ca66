{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/ClientThumbWrap/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: calc(33% - 24px);\\n  margin: 12px;\\n  position: relative;\\n  display: \", \";\\n  border-radius: 8px;\\n  overflow: hidden;\\n  cursor: pointer;\\n  transition-duration: 0.3s;\\n  transition-timing-function: ease-in-out;\\n  img {\\n    object-fit: cover;\\n    transition-duration: 0.3s;\\n    transition-timing-function: ease-in-out;\\n    filter: \", \";\\n    opacity: \", \";\\n  }\\n  .clientInner {\\n    position: relative;\\n    display: flex;\\n    padding-bottom: 100%;\\n    width: 100%;\\n    background-color: \", \";\\n    border-radius: 8px;\\n    .clientContent {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      color: white;\\n      padding: 24px;\\n      text-align: center;\\n      p {\\n        color: white;\\n        margin-bottom: 0;\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport styled from \"styled-components\";\nvar ClientThumb = styled.div(_templateObject(), function (props) {\n  return props.display ? \"block\" : \"none\";\n}, function (props) {\n  return props.blur ? \"blur(4px)\" : \"unset\";\n}, function (props) {\n  return props.blur ? 0.8 : 1;\n}, function (props) {\n  return props.clientHover ? \"#040234\" : \"#f8f8f8\";\n});\n_c = ClientThumb;\n\nvar ClientThumbWrap = function ClientThumbWrap(_ref) {\n  _s();\n\n  var setViewer = _ref.setViewer,\n      client = _ref.client,\n      blur = _ref.blur,\n      discipline = _ref.discipline;\n\n  var _useState = useState(false),\n      clientHover = _useState[0],\n      setClientHover = _useState[1];\n\n  return __jsx(ClientThumb, {\n    key: client.id,\n    onClick: function onClick() {\n      return setViewer(true);\n    },\n    display: (client.ux && discipline === \"ux\" || client.graphic && discipline === \"graphic\" || client.dev && discipline === \"dev\") && true,\n    blur: blur,\n    onMouseEnter: function onMouseEnter() {\n      return setClientHover(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setClientHover(false);\n    },\n    clientHover: clientHover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"clientInner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, !clientHover && __jsx(Image, {\n    src: client.imageThumb,\n    alt: \"Picture of the author\",\n    layout: \"fill\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"clientContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, clientHover && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, \" \", client.clientName, \" \"))));\n};\n\n_s(ClientThumbWrap, \"fG/BCmuxXgKPPR4SUk9WJSZhkBE=\");\n\n_c2 = ClientThumbWrap;\nexport default ClientThumbWrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClientThumb\");\n$RefreshReg$(_c2, \"ClientThumbWrap\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/ClientThumbWrap/index.jsx"],"names":["useState","Image","styled","ClientThumb","div","props","display","blur","clientHover","ClientThumbWrap","setViewer","client","discipline","setClientHover","id","ux","graphic","dev","imageThumb","clientName"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,WAAW,GAAGD,MAAM,CAACE,GAAV,oBAIJ,UAACC,KAAD;AAAA,SAAYA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,MAAtC;AAAA,CAJI,EAcH,UAACD,KAAD;AAAA,SAAYA,KAAK,CAACE,IAAN,GAAa,WAAb,GAA2B,OAAvC;AAAA,CAdG,EAeF,UAACF,KAAD;AAAA,SAAYA,KAAK,CAACE,IAAN,GAAa,GAAb,GAAmB,CAA/B;AAAA,CAfE,EAsBO,UAACF,KAAD;AAAA,SAAYA,KAAK,CAACG,WAAN,GAAoB,SAApB,GAAgC,SAA5C;AAAA,CAtBP,CAAjB;KAAML,W;;AA4CN,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,OAA6C;AAAA;;AAAA,MAA1CC,SAA0C,QAA1CA,SAA0C;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,MAAvBJ,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBK,UAAiB,QAAjBA,UAAiB;;AAAA,kBAC7BZ,QAAQ,CAAC,KAAD,CADqB;AAAA,MAC5DQ,WAD4D;AAAA,MAC/CK,cAD+C;;AAEnE,SACE,MAAC,WAAD;AACE,IAAA,GAAG,EAAEF,MAAM,CAACG,EADd;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMJ,SAAS,CAAC,IAAD,CAAf;AAAA,KAFX;AAGE,IAAA,OAAO,EACL,CAAEC,MAAM,CAACI,EAAP,IAAaH,UAAU,KAAK,IAA7B,IACED,MAAM,CAACK,OAAP,IAAkBJ,UAAU,KAAK,SADnC,IAEED,MAAM,CAACM,GAAP,IAAcL,UAAU,KAAK,KAFhC,KAGA,IAPJ;AASE,IAAA,IAAI,EAAEL,IATR;AAUE,IAAA,YAAY,EAAE;AAAA,aAAMM,cAAc,CAAC,IAAD,CAApB;AAAA,KAVhB;AAWE,IAAA,YAAY,EAAE;AAAA,aAAMA,cAAc,CAAC,KAAD,CAApB;AAAA,KAXhB;AAYE,IAAA,WAAW,EAAEL,WAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,WAAD,IACC,MAAC,KAAD;AACE,IAAA,GAAG,EAAEG,MAAM,CAACO,UADd;AAEE,IAAA,GAAG,EAAC,uBAFN;AAGE,IAAA,MAAM,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,WAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKG,MAAM,CAACQ,UAAZ,MADlB,CARF,CAdF,CADF;AA6BD,CA/BD;;GAAMV,e;;MAAAA,e;AAiCN,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\";\nimport Image from \"next/image\";\nimport styled from \"styled-components\";\n\nconst ClientThumb = styled.div`\n  width: calc(33% - 24px);\n  margin: 12px;\n  position: relative;\n  display: ${(props) => (props.display ? \"block\" : \"none\")};\n  border-radius: 8px;\n  overflow: hidden;\n  cursor: pointer;\n  transition-duration: 0.3s;\n  transition-timing-function: ease-in-out;\n  img {\n    object-fit: cover;\n    transition-duration: 0.3s;\n    transition-timing-function: ease-in-out;\n    filter: ${(props) => (props.blur ? \"blur(4px)\" : \"unset\")};\n    opacity: ${(props) => (props.blur ? 0.8 : 1)};\n  }\n  .clientInner {\n    position: relative;\n    display: flex;\n    padding-bottom: 100%;\n    width: 100%;\n    background-color: ${(props) => (props.clientHover ? \"#040234\" : \"#f8f8f8\")};\n    border-radius: 8px;\n    .clientContent {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: white;\n      padding: 24px;\n      text-align: center;\n      p {\n        color: white;\n        margin-bottom: 0;\n      }\n    }\n  }\n`;\n\nconst ClientThumbWrap = ({ setViewer, client, blur, discipline }) => {\n  const [clientHover, setClientHover] = useState(false);\n  return (\n    <ClientThumb\n      key={client.id}\n      onClick={() => setViewer(true)}\n      display={\n        ((client.ux && discipline === \"ux\") ||\n          (client.graphic && discipline === \"graphic\") ||\n          (client.dev && discipline === \"dev\")) &&\n        true\n      }\n      blur={blur}\n      onMouseEnter={() => setClientHover(true)}\n      onMouseLeave={() => setClientHover(false)}\n      clientHover={clientHover}\n    >\n      <div className=\"clientInner\">\n        {!clientHover && (\n          <Image\n            src={client.imageThumb}\n            alt=\"Picture of the author\"\n            layout=\"fill\"\n          />\n        )}\n        <div className=\"clientContent\">\n          {clientHover && <p> {client.clientName} </p>}\n        </div>\n      </div>\n    </ClientThumb>\n  );\n};\n\nexport default ClientThumbWrap;\n"]},"metadata":{},"sourceType":"module"}