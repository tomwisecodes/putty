{"ast":null,"code":"import axios from \"axios\";\nexport const resolvers = {\n  Query: {\n    getUsers: async () => {\n      try {\n        const users = await axios.get(\"https://api.github.com/users\");\n        return users.data.map(({\n          id,\n          login,\n          avatar_url\n        }) => ({\n          id,\n          login,\n          avatar_url\n        }));\n      } catch (error) {\n        throw error;\n      }\n    },\n    getUser: async (_, args) => {\n      try {\n        const user = await axios.get(`https://api.github.com/users/${args.name}`);\n        return {\n          id: user.data.id,\n          login: user.data.login,\n          avatar_url: user.data.avatar_url\n        };\n      } catch (error) {\n        throw error;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/pages/api/resolvers/index.js"],"names":["axios","resolvers","Query","getUsers","users","get","data","map","id","login","avatar_url","error","getUser","_","args","user","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,YAAY;AACpB,UAAI;AACF,cAAMC,KAAK,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,8BAAV,CAApB;AACA,eAAOD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAAD,MAAgC;AACpDF,UAAAA,EADoD;AAEpDC,UAAAA,KAFoD;AAGpDC,UAAAA;AAHoD,SAAhC,CAAf,CAAP;AAKD,OAPD,CAOE,OAAOC,KAAP,EAAc;AACd,cAAMA,KAAN;AACD;AACF,KAZI;AAaLC,IAAAA,OAAO,EAAE,OAAOC,CAAP,EAAUC,IAAV,KAAmB;AAC1B,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMf,KAAK,CAACK,GAAN,CAChB,gCAA+BS,IAAI,CAACE,IAAK,EADzB,CAAnB;AAGA,eAAO;AACLR,UAAAA,EAAE,EAAEO,IAAI,CAACT,IAAL,CAAUE,EADT;AAELC,UAAAA,KAAK,EAAEM,IAAI,CAACT,IAAL,CAAUG,KAFZ;AAGLC,UAAAA,UAAU,EAAEK,IAAI,CAACT,IAAL,CAAUI;AAHjB,SAAP;AAKD,OATD,CASE,OAAOC,KAAP,EAAc;AACd,cAAMA,KAAN;AACD;AACF;AA1BI;AADgB,CAAlB","sourcesContent":["import axios from \"axios\";\n\nexport const resolvers = {\n  Query: {\n    getUsers: async () => {\n      try {\n        const users = await axios.get(\"https://api.github.com/users\");\n        return users.data.map(({ id, login, avatar_url }) => ({\n          id,\n          login,\n          avatar_url,\n        }));\n      } catch (error) {\n        throw error;\n      }\n    },\n    getUser: async (_, args) => {\n      try {\n        const user = await axios.get(\n          `https://api.github.com/users/${args.name}`\n        );\n        return {\n          id: user.data.id,\n          login: user.data.login,\n          avatar_url: user.data.avatar_url,\n        };\n      } catch (error) {\n        throw error;\n      }\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}