{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/FlexWrapper/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nconst Flex = styled.div.withConfig({\n  displayName: \"FlexWrapper__Flex\",\n  componentId: \"sc-1rclgsl-0\"\n})([\"display:flex;flex-wrap:\", \";justify-content:\", \";align-items:\", \";flex-direction:\", \";\"], props => props.wrap ? \"wrap\" : \"unset\", props => props.justify ? props.justify : \"unset\", props => props.align ? props.align : \"unset\", props => props.justify ? props.direction : \"unset\");\n\nconst FlexWrapper = ({\n  children,\n  styles = [wrap, justify, direction, align]\n}) => {\n  return __jsx(Flex, {\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default FlexWrapper;","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/tomwise-portfolio/components/FlexWrapper/index.jsx"],"names":["styled","Flex","div","props","wrap","justify","align","direction","FlexWrapper","children","styles"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,+FAEMC,KAAD,IAAYA,KAAK,CAACC,IAAN,GAAa,MAAb,GAAsB,OAFvC,EAGYD,KAAD,IAAYA,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACE,OAAtB,GAAgC,OAHvD,EAIQF,KAAD,IAAYA,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACG,KAApB,GAA4B,OAJ/C,EAKWH,KAAD,IAAYA,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACI,SAAtB,GAAkC,OALxD,CAAV;;AAQA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,MAAM,GAAG,CAACN,IAAD,EAAOC,OAAP,EAAgBE,SAAhB,EAA2BD,KAA3B;AAFU,CAAD,KAGd;AACJ,SAAO,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEI,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,QAAvB,CAAP;AACD,CALD;;AAOA,eAAeD,WAAf","sourcesContent":["import styled from \"styled-components\";\n\nconst Flex = styled.div`\n  display: flex;\n  flex-wrap: ${(props) => (props.wrap ? \"wrap\" : \"unset\")};\n  justify-content: ${(props) => (props.justify ? props.justify : \"unset\")};\n  align-items: ${(props) => (props.align ? props.align : \"unset\")};\n  flex-direction: ${(props) => (props.justify ? props.direction : \"unset\")};\n`;\n\nconst FlexWrapper = ({\n  children,\n  styles = [wrap, justify, direction, align],\n}) => {\n  return <Flex styles={styles}>{children}</Flex>;\n};\n\nexport default FlexWrapper;\n"]},"metadata":{},"sourceType":"module"}