{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport styled from \"styled-components\";\nimport ContactBlob from \"../../components/ContactBlob\";\nvar Chaos = styled.button.withConfig({\n  displayName: \"DefaultLayout__Chaos\",\n  componentId: \"sc-1vxtm7p-0\"\n})([\"position:fixed;bottom:0;right:0;background-color:\", \";padding:30px;cursor:pointer;color:white;font-size:18px;border:none;outline:none;z-index:10;\"], function (props) {\n  return props.chaos ? \"#0800C9\" : \"#A90000\";\n});\nvar Main = styled.main.withConfig({\n  displayName: \"DefaultLayout__Main\",\n  componentId: \"sc-1vxtm7p-1\"\n})([\"background-color:\", \";*{color:\", \";}\"], function (props) {\n  return props.darkMode ? \"#252529\" : \"#FAFAED\";\n}, function (props) {\n  return props.darkMode ? \"#FAFAED\" : \"#252529\";\n});\n_c = Main;\n\nvar DefaultLayout = function DefaultLayout(_ref) {\n  var children = _ref.children,\n      display = _ref.display,\n      className = _ref.className,\n      darkMode = _ref.darkMode;\n  //   const [chaos, setChaos] = useState(false);\n  //   const [counter, setCounter] = useState(1);\n  //   let theStuff = null;\n  //   function getPlusOrMinus() {\n  //     return Math.round(Math.random()) * 2 - 1;\n  //   }\n  //   function getRandomDuration() {\n  //     return Math.random() * Math.random() * 100;\n  //   }\n  //   function getRandomXPosition() {\n  //     const X = getPlusOrMinus() * Math.round(-50 + Math.random() * 1500);\n  //     return X;\n  //   }\n  //   function getRandomYPosition() {\n  //     const Y = getPlusOrMinus() * Math.round(-500 + Math.random() * 1500);\n  //     return Y;\n  //   }\n  //   function getRandomRotate(max) {\n  //     const R = getPlusOrMinus() * Math.floor(Math.random() * Math.floor(max));\n  //     return R;\n  //   }\n  //   function addStyles(item) {\n  //     item.style.transform =\n  //       \"translate3d(\" +\n  //       getRandomXPosition() +\n  //       \"px\" +\n  //       \", \" +\n  //       getRandomYPosition() +\n  //       \"px\" +\n  //       \", 0)rotate(\" +\n  //       getRandomRotate(720) +\n  //       \"deg)\";\n  //   }\n  //   function addTime(item, time) {\n  //     item.style.transitionDuration = time + \"s\";\n  //   }\n  // useEffect(() => {\n  //   if (chaos) {\n  //     const interval = setInterval(() => {\n  //       setCounter((counter) => counter + 1);\n  //     }, 1000);\n  //     return () => clearInterval(interval);\n  //   } else {\n  //     setCounter(1);\n  //   }\n  // }, [chaos]);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function isItYourTimeToChange() {\n  //     const counterSeconds = counter + \"s\";\n  //     if (counter > 1) {\n  //       for (const [key, value] of Object.entries(theStuff)) {\n  //         if (value.style.transitionDuration === counterSeconds) {\n  //           addStyles(theStuff[key]);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   isItYourTimeToChange();\n  // }, [counter]);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function elementsGoWild() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       // When the user clicks on an element\n  //       theStuff[i].onclick = function () {\n  //         theStuff[i].style.padding = \"36px\";\n  //         addStyles(theStuff[i]);\n  //         addTime(theStuff[i], roundedTime);\n  //       };\n  //       //defualt fire\n  //       theStuff[i].style.padding = \"36px\";\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   function elementsBackToWork() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       addStyles(theStuff[i]);\n  //       theStuff[i].style.padding = \"inherit\";\n  //       theStuff[i].style.transitionDuration = \"1.2s\";\n  //     }\n  //   }\n  //   if (chaos) {\n  //     elementsGoWild();\n  //   } else {\n  //     elementsBackToWork();\n  //   }\n  // }, [chaos]);\n  // /// Fires on first load\n  // useEffect(() => {\n  //   function wrapChars(str) {\n  //     // return str.replace(/\\w/g, <span className=\"c\">$&</span>);\n  //     const replacement = str.replace(\n  //       /./gm,\n  //       \"<span class=\" + \"floater\" + \">$&</span>\"\n  //     );\n  //     return replacement;\n  //   }\n  //   function wrapText() {\n  //     const theTest = document.querySelectorAll(\".c\");\n  //     for (let i = 0; i < theTest.length; i++) {\n  //       const theTestSpanned = wrapChars(theTest[i].innerHTML);\n  //       theTest[i].innerHTML = theTestSpanned;\n  //     }\n  //   }\n  //   wrapText();\n  // }, []);\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function initialLoadUp() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       //defualt fire\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   initialLoadUp();\n  // }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    display: display,\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), __jsx(Main, {\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, children), __jsx(Footer, {\n    darkMode: darkMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = DefaultLayout;\nexport default DefaultLayout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"DefaultLayout\");","map":{"version":3,"sources":["/Users/tom/Documents/sites/tomWisePortfolio/putty/Layouts/DefaultLayout/index.jsx"],"names":["useEffect","useRef","useState","Header","Footer","styled","ContactBlob","Chaos","button","props","chaos","Main","main","darkMode","DefaultLayout","children","display","className"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,IAAMC,KAAK,GAAGF,MAAM,CAACG,MAAV;AAAA;AAAA;AAAA,0JAIW,UAACC,KAAD;AAAA,SAAYA,KAAK,CAACC,KAAN,GAAc,SAAd,GAA0B,SAAtC;AAAA,CAJX,CAAX;AAcA,IAAMC,IAAI,GAAGN,MAAM,CAACO,IAAV;AAAA;AAAA;AAAA,6CACY,UAACH,KAAD;AAAA,SAAYA,KAAK,CAACI,QAAN,GAAiB,SAAjB,GAA6B,SAAzC;AAAA,CADZ,EAGG,UAACJ,KAAD;AAAA,SAAYA,KAAK,CAACI,QAAN,GAAiB,SAAjB,GAA6B,SAAzC;AAAA,CAHH,CAAV;KAAMF,I;;AAON,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAgD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfJ,QAAe,QAAfA,QAAe;AACpjB;AAA0B,IAAA,QAAQ,EAAEH,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BE,QAA3B,CAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEF,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA/ID;;MAAMC,a;AAiJN,eAAeA,aAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\n\nimport styled from \"styled-components\";\nimport ContactBlob from \"../../components/ContactBlob\";\n\nconst Chaos = styled.button`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  background-color: ${(props) => (props.chaos ? \"#0800C9\" : \"#A90000\")};\n  padding: 30px;\n  cursor: pointer;\n  color: white;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  z-index: 10;\n`;\n\nconst Main = styled.main`\n  background-color: ${(props) => (props.darkMode ? \"#252529\" : \"#FAFAED\")};\n  * {\n    color: ${(props) => (props.darkMode ? \"#FAFAED\" : \"#252529\")};\n  }\n`;\n\nconst DefaultLayout = ({ children, display, className, darkMode }) => {\n  //   const [chaos, setChaos] = useState(false);\n  //   const [counter, setCounter] = useState(1);\n\n  //   let theStuff = null;\n  //   function getPlusOrMinus() {\n  //     return Math.round(Math.random()) * 2 - 1;\n  //   }\n  //   function getRandomDuration() {\n  //     return Math.random() * Math.random() * 100;\n  //   }\n  //   function getRandomXPosition() {\n  //     const X = getPlusOrMinus() * Math.round(-50 + Math.random() * 1500);\n  //     return X;\n  //   }\n  //   function getRandomYPosition() {\n  //     const Y = getPlusOrMinus() * Math.round(-500 + Math.random() * 1500);\n  //     return Y;\n  //   }\n  //   function getRandomRotate(max) {\n  //     const R = getPlusOrMinus() * Math.floor(Math.random() * Math.floor(max));\n  //     return R;\n  //   }\n\n  //   function addStyles(item) {\n  //     item.style.transform =\n  //       \"translate3d(\" +\n  //       getRandomXPosition() +\n  //       \"px\" +\n  //       \", \" +\n  //       getRandomYPosition() +\n  //       \"px\" +\n  //       \", 0)rotate(\" +\n  //       getRandomRotate(720) +\n  //       \"deg)\";\n  //   }\n  //   function addTime(item, time) {\n  //     item.style.transitionDuration = time + \"s\";\n  //   }\n\n  // useEffect(() => {\n  //   if (chaos) {\n  //     const interval = setInterval(() => {\n  //       setCounter((counter) => counter + 1);\n  //     }, 1000);\n  //     return () => clearInterval(interval);\n  //   } else {\n  //     setCounter(1);\n  //   }\n  // }, [chaos]);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function isItYourTimeToChange() {\n  //     const counterSeconds = counter + \"s\";\n  //     if (counter > 1) {\n  //       for (const [key, value] of Object.entries(theStuff)) {\n  //         if (value.style.transitionDuration === counterSeconds) {\n  //           addStyles(theStuff[key]);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   isItYourTimeToChange();\n  // }, [counter]);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n  //   function elementsGoWild() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       // When the user clicks on an element\n  //       theStuff[i].onclick = function () {\n  //         theStuff[i].style.padding = \"36px\";\n  //         addStyles(theStuff[i]);\n  //         addTime(theStuff[i], roundedTime);\n  //       };\n\n  //       //defualt fire\n  //       theStuff[i].style.padding = \"36px\";\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   function elementsBackToWork() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       addStyles(theStuff[i]);\n  //       theStuff[i].style.padding = \"inherit\";\n  //       theStuff[i].style.transitionDuration = \"1.2s\";\n  //     }\n  //   }\n  //   if (chaos) {\n  //     elementsGoWild();\n  //   } else {\n  //     elementsBackToWork();\n  //   }\n  // }, [chaos]);\n\n  // /// Fires on first load\n  // useEffect(() => {\n  //   function wrapChars(str) {\n  //     // return str.replace(/\\w/g, <span className=\"c\">$&</span>);\n  //     const replacement = str.replace(\n  //       /./gm,\n  //       \"<span class=\" + \"floater\" + \">$&</span>\"\n  //     );\n  //     return replacement;\n  //   }\n  //   function wrapText() {\n  //     const theTest = document.querySelectorAll(\".c\");\n\n  //     for (let i = 0; i < theTest.length; i++) {\n  //       const theTestSpanned = wrapChars(theTest[i].innerHTML);\n  //       theTest[i].innerHTML = theTestSpanned;\n  //     }\n  //   }\n\n  //   wrapText();\n  // }, []);\n\n  // useEffect(() => {\n  //   theStuff = document.querySelectorAll(\".floater\");\n\n  //   function initialLoadUp() {\n  //     for (let i = 0; i < theStuff.length; i++) {\n  //       const theTimeThatControlsTheSpeed = getRandomDuration();\n  //       const roundedTime = Math.round(theTimeThatControlsTheSpeed);\n  //       //defualt fire\n  //       addStyles(theStuff[i]);\n  //       addTime(theStuff[i], roundedTime);\n  //     }\n  //   }\n  //   initialLoadUp();\n  // }, []);\n\n  return (\n    <>\n      <Header display={display} darkMode={darkMode} />\n      <Main darkMode={darkMode}>{children}</Main>\n      <Footer darkMode={darkMode} />\n    </>\n  );\n};\n\nexport default DefaultLayout;\n"]},"metadata":{},"sourceType":"module"}