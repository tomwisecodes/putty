var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { transformContext, IkonateContext } from '../context';
export var Bug = React.forwardRef(function (props, svgRef) {
    var value = React.useContext(IkonateContext);
    var extraProps = transformContext(value);
    return React.createElement("svg", __assign({ role: "img", width: "1em", height: "1em", viewBox: "0 0 24 24", "aria-labelledby": "bugIconTitle", strokeLinejoin: "miter", strokeLinecap: "square", strokeWidth: "2" }, extraProps, { stroke: "currentColor", fill: "none", ref: svgRef }, props),
        React.createElement("title", { id: "bugIconTitle" }, "Bug"),
        React.createElement("path", { d: "M15 6.99989086C16.1045695 6.99989086 17 7.89532136 17 8.99989086L17 16.458686C17 17.1113133 16.6815784 17.722892 16.1469254 18.0971494L12 21 7.85307456 18.0971494C7.31842164 17.722892 7 17.1113133 7 16.458686L7 8.99989086C7 7.89532136 7.8954305 6.99989086 9 6.99989086 9.00005899 5.34308677 10.3431821 4 12 4 13.6568179 4 14.999941 5.34308677 15 6.99989086zM4 13L7 13" }),
        React.createElement("polyline", { points: "3 7 5 9 7 9" }),
        React.createElement("polyline", { points: "21 7 19 9 17 9" }),
        React.createElement("polyline", { points: "3 19 5 17 7 17" }),
        React.createElement("polyline", { points: "17 17 19 17 21 19 21 19" }),
        React.createElement("path", { d: "M17,13 L20,13" }));
});
