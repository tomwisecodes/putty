var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
export var IkonateContext = React.createContext({});
var styleMap = {
    square: { strokeLinecap: 'square', strokeLinejoin: 'miter' },
    roundSquare: { strokeLinecap: 'round', strokeLinejoin: 'miter' },
    round: { strokeLinecap: 'round', strokeLinejoin: 'round' },
};
export var transformContext = function (_a) {
    var _b = _a.style, style = _b === void 0 ? 'square' : _b, size = _a.size, _c = _a.border, border = _c === void 0 ? 2 : _c, color = _a.color;
    var iconStyle = styleMap[style];
    return __assign({}, iconStyle, { strokeWidth: border, color: color, fontSize: size });
};
